[{"path":"https://yogat3ch.github.io/UU/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephen Holsenbeck. Author, maintainer.","code":""},{"path":"https://yogat3ch.github.io/UU/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Holsenbeck S (2023). UU: Universally Useful. R package version 1.39.3, https://yogat3ch.github.io/UU/.","code":"@Manual{,   title = {UU: Universally Useful},   author = {Stephen Holsenbeck},   year = {2023},   note = {R package version 1.39.3},   url = {https://yogat3ch.github.io/UU/}, }"},{"path":"https://yogat3ch.github.io/UU/index.html","id":"uu","dir":"","previous_headings":"","what":"Universally Useful","title":"Universally Useful","text":"collection Universally Useful functions!","code":""},{"path":"https://yogat3ch.github.io/UU/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Universally Useful","text":"can install development version UU GitHub : Check pkgdown site details! fun(s)!","code":"# install.packages(\"devtools\") devtools::install_github(\"yogat3ch/UU\")"},{"path":"https://yogat3ch.github.io/UU/reference/as_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Preserve a string as JS/HTML (prevent translation of characters) — as_js","title":"Preserve a string as JS/HTML (prevent translation of characters) — as_js","text":"Preserve string JS/HTML (prevent translation characters)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/as_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preserve a string as JS/HTML (prevent translation of characters) — as_js","text":"","code":"as_js(x)"},{"path":"https://yogat3ch.github.io/UU/reference/as_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preserve a string as JS/HTML (prevent translation of characters) — as_js","text":"x chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/as_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preserve a string as JS/HTML (prevent translation of characters) — as_js","text":"chr, HTML, JS_EVAL","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/assign_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign an object to the global environment — assign_global","title":"Assign an object to the global environment — assign_global","text":"Assign object global environment","code":""},{"path":"https://yogat3ch.github.io/UU/reference/assign_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign an object to the global environment — assign_global","text":"","code":"assign_global(x, nm = rlang::expr_deparse(rlang::enexpr(x)), env = .GlobalEnv)"},{"path":"https://yogat3ch.github.io/UU/reference/assign_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign an object to the global environment — assign_global","text":"x obj assign nm chr vector object subsets assign","code":""},{"path":"https://yogat3ch.github.io/UU/reference/assign_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign an object to the global environment — assign_global","text":"x","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/assign_global.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign an object to the global environment — assign_global","text":"","code":"assign_global(FALSE, \"test\") #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/assign_in_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a variable into a namespace — assign_in_ns","title":"Assign a variable into a namespace — assign_in_ns","text":"Unlocks relocks namespaces bindings needed","code":""},{"path":"https://yogat3ch.github.io/UU/reference/assign_in_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a variable into a namespace — assign_in_ns","text":"","code":"assign_in_ns(   x,   nm = rlang::expr_deparse(rlang::enexpr(x)),   ns_env = rlang::ns_env(pkg_name()) )"},{"path":"https://yogat3ch.github.io/UU/reference/assign_in_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a variable into a namespace — assign_in_ns","text":"x object/chr either object name object assign nm chr name object namespace. x supplied, object retrieved name calling environment via get0 ns_env env namespace","code":""},{"path":"https://yogat3ch.github.io/UU/reference/assign_in_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a variable into a namespace — assign_in_ns","text":"x object","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/assign_in_ns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign a variable into a namespace — assign_in_ns","text":"","code":"(function(x = mtcars) { y <- dplyr::mutate(x, cylinders = cyl)   assign_in_ns(nm = \"y\", ns_env = \"UU\") })() #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #>                     cylinders #> Mazda RX4                   6 #> Mazda RX4 Wag               6 #> Datsun 710                  4 #> Hornet 4 Drive              6 #> Hornet Sportabout           8 #> Valiant                     6 #> Duster 360                  8 #> Merc 240D                   4 #> Merc 230                    4 #> Merc 280                    6 #> Merc 280C                   6 #> Merc 450SE                  8 #> Merc 450SL                  8 #> Merc 450SLC                 8 #> Cadillac Fleetwood          8 #> Lincoln Continental         8 #> Chrysler Imperial           8 #> Fiat 128                    4 #> Honda Civic                 4 #> Toyota Corolla              4 #> Toyota Corona               4 #> Dodge Challenger            8 #> AMC Javelin                 8 #> Camaro Z28                  8 #> Pontiac Firebird            8 #> Fiat X1-9                   4 #> Porsche 914-2               4 #> Lotus Europa                4 #> Ford Pantera L              8 #> Ferrari Dino                6 #> Maserati Bora               8 #> Volvo 142E                  4 uu <- rlang::ns_env(\"UU\") exists(\"y\", uu) #> [1] TRUE assign_in_ns(mtcars, ns_env = \"UU\") #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 exists(\"mtcars\", uu) #> [1] TRUE assign_in_ns(mtcars, \"cars_copy\", ns_env = \"UU\") #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 exists(\"cars_copy\", uu) #> [1] TRUE rlang::env_unlock(uu) rm(list = c(\"y\", \"mtcars\", \"cars_copy\"), envir = uu) rlang::env_lock(uu)"},{"path":"https://yogat3ch.github.io/UU/reference/col_type_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of column type conversions — col_type_hash","title":"Index of column type conversions — col_type_hash","text":"Index column type conversions","code":""},{"path":"https://yogat3ch.github.io/UU/reference/col_type_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index of column type conversions — col_type_hash","text":"","code":"col_type_hash"},{"path":"https://yogat3ch.github.io/UU/reference/col_type_hash.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Index of column type conversions — col_type_hash","text":"object class tbl_df (inherits tbl, data.frame) 10 rows 5 columns.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts input to a specified type output — col_types","title":"Converts input to a specified type output — col_types","text":"Given various inputs, provide col_type specification format indicated outtype","code":""},{"path":"https://yogat3ch.github.io/UU/reference/col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts input to a specified type output — col_types","text":"","code":"col_types(   x,   outtype = c(\"chr\", \"hud\", \"fun\", \"typ\", \"col\")[1],   is_raw_column = TRUE )"},{"path":"https://yogat3ch.github.io/UU/reference/col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts input to a specified type output — col_types","text":"x (vector/function) One : column () type specification HUD (character) readr parse_* function (See parse_logical) (function) readr type specification (See cols) (character) outtype (character) One : \"chr\" Returns class readr abbreviation (See cols) \"hud\" (character) type specification HUD \"fun\"readr parse_* function (See parse_logical) (function) \"typ\" (character) R data class \"col\" (character) collector is_raw_column x raw column input class used?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts input to a specified type output — col_types","text":"See outtype","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/col_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts input to a specified type output — col_types","text":"","code":"glue::glue_collapse(purrr::map_chr(iris, col_types)) #> nnnnf if (FALSE) {  # only run if readr is installed, otherwise will throw error  purrr::map(iris, col_types, outtype = \"col\") }"},{"path":"https://yogat3ch.github.io/UU/reference/color_cycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","title":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","text":"Makes cyclic color palette specified length using specified transformation cycle","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_cycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","text":"","code":"color_cycle(colors, n, transform_fn = colorspace::lighten, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/color_cycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","text":"colors chr vector colors hex format n num length color vector needed transform_fn fun See lighten examples ... args passed transform_fn","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_cycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","text":"chr vector n length","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_cycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes a cyclic color palette of a specified length using the specified transformation each cycle — color_cycle","text":"","code":"color_cycle(c(\"rgba(18,180,211,1)\", \"rgba(2,120,170,1)\", \"rgba(0,57,73,1)\"), n = 9, amount = .2) #> Error in loadNamespace(x): there is no package called ‘colorspace’"},{"path":"https://yogat3ch.github.io/UU/reference/color_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute color distance — color_distance","title":"Compute color distance — color_distance","text":"Compute color distance","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute color distance — color_distance","text":"","code":"color_distance(x, y)"},{"path":"https://yogat3ch.github.io/UU/reference/color_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute color distance — color_distance","text":"x num/chr Named vector CSS hex rgb/rgba color y num/chr Named vector CSS hex rgb/rgba color","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute color distance — color_distance","text":"num representation distance comparison distances","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute color distance — color_distance","text":"","code":"color_distance(c(a = \"rgba(111,96,140,1)\"), c(\"#12B4D3\", \"green\")) #>                a #> #12B4D3 2080.713 #> green   3816.264"},{"path":"https://yogat3ch.github.io/UU/reference/color_interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate between two colors — color_interpolate","title":"Interpolate between two colors — color_interpolate","text":"Interpolate two colors","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate between two colors — color_interpolate","text":"","code":"color_interpolate(colors = c(\"#9A3324\", \"#016f90\"), n, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/color_interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate between two colors — color_interpolate","text":"colors chr hex colors n int number colors expected ... Arguments passed grDevices::colorRamp bias positive number.  Higher values give widely spaced     colors high end. space character string; interpolation RGB CIE Lab     color spaces. interpolate use spline linear interpolation. alpha logical: alpha channel (opacity) values     returned?   error give true value     space specified.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate between two colors — color_interpolate","text":"chr hex values","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate between two colors — color_interpolate","text":"","code":"color_interpolate(n = 3) #> [1] \"#9A3324\" \"#4D5159\" \"#016F90\""},{"path":"https://yogat3ch.github.io/UU/reference/color_luminance.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the luminance of a particular color, scaled 0-1 — color_luminance","title":"Find the luminance of a particular color, scaled 0-1 — color_luminance","text":"Find luminance particular color, scaled 0-1","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_luminance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the luminance of a particular color, scaled 0-1 — color_luminance","text":"","code":"color_luminance(red, green, blue, alpha, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/color_luminance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the luminance of a particular color, scaled 0-1 — color_luminance","text":"red, blue, green, alpha numeric vectors values \\([0, M]\\)     \\(M\\) maxColorValue.  255,     red, blue, green, alpha     values coerced integers 0:255 result     computed efficiently. ... additional arguments","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_luminance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the luminance of a particular color, scaled 0-1 — color_luminance","text":"num","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_luminance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the luminance of a particular color, scaled 0-1 — color_luminance","text":"","code":"rlang::exec(color_luminance, !!!css_col2vec('white')) #> [1] 1"},{"path":"https://yogat3ch.github.io/UU/reference/color_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match colors by visual distance — color_match","title":"Match colors by visual distance — color_match","text":"Helpful pairing colors across light/dark palettes","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match colors by visual distance — color_match","text":"","code":"color_match(x, y, with_replacement = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/color_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match colors by visual distance — color_match","text":"x chr Named CSS representations colors matched y chr Named CSS representations colors selected matches with_replacement lgl Whether colors x unique matches y, y can matched replacement. Default TRUE match closest color y, regardless already matched previous color x.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match colors by visual distance — color_match","text":"tbl matches x associated distance","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match colors by visual distance — color_match","text":"","code":"a <- list(   light = list(     aquamarine = \"rgb(137,210,215)\",     teal = \"rgb(79,194,198)\",     turquoise = \"rgb(3,119,132)\",     evergreen = \"rgb(0,84,92)\",     brown = \"rgb(72,36,18)\",     lightbrown = \"rgb(132,96,78)\",     orange = \"rgb(250,173,25)\",     darkorange = \"rgb(198,143,44)\",     aliceblue = \"rgb(180,243,249)\",     gainsboro = \"rgb(223,254,255)\"   ),   dark = list(     lightblue = \"rgba(18,180,211,1)\",     darkblue = \"rgba(2,120,170,1)\",     navyblue = \"rgba(0,57,73,1)\",     brown = \"rgba(72,36,18,1)\",     lightbrown = \"rgb(132,96,78)\",     lighterbrown = \"rgba(181,141,122, 1)\",     purple = \"rgba(111,96,140,1)\",     lightpurple = \"rgba(165,150,194,1)\",     darkcyan = \"rgba(0,166,212,1)\",     darkturquoise = \"rgba(9,119,168,1)\"   ) ) color_match(a$light, a$dark) #> # A tibble: 10 × 5 #>    x                x_nm       y                  y_nm            dist #>    <chr>            <chr>      <chr>              <chr>          <dbl> #>  1 rgb(137,210,215) aquamarine rgba(18,180,211,1) lightblue     1010.  #>  2 rgb(79,194,198)  teal       rgba(18,180,211,1) lightblue      393.  #>  3 rgb(3,119,132)   turquoise  rgba(9,119,168,1)  darkturquoise  141.  #>  4 rgb(0,84,92)     evergreen  rgba(0,57,73,1)    navyblue       910.  #>  5 rgb(72,36,18)    brown      rgba(72,36,18,1)   brown            0   #>  6 rgb(132,96,78)   lightbrown rgb(132,96,78)     lightbrown       0   #>  7 rgb(250,173,25)  orange     rgba(18,180,211,1) lightblue      736.  #>  8 rgb(198,143,44)  darkorange rgba(0,166,212,1)  darkcyan        89.6 #>  9 rgb(180,243,249) aliceblue  rgba(18,180,211,1) lightblue     2046.  #> 10 rgb(223,254,255) gainsboro  rgba(18,180,211,1) lightblue     2520."},{"path":"https://yogat3ch.github.io/UU/reference/color_rgb_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert vector of colors to named tbl — color_rgb_table","title":"Convert vector of colors to named tbl — color_rgb_table","text":"Convert vector colors named tbl","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_rgb_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert vector of colors to named tbl — color_rgb_table","text":"","code":"color_rgb_table(colors)"},{"path":"https://yogat3ch.github.io/UU/reference/color_rgb_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert vector of colors to named tbl — color_rgb_table","text":"colors chr vector css color representations","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_rgb_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert vector of colors to named tbl — color_rgb_table","text":"tbl Columns red, green, blue, alpha color row","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_rgb_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert vector of colors to named tbl — color_rgb_table","text":"","code":"color_rgb_table(c(\"red\", \"green\", \"#45fa32\")) #> # A tibble: 3 × 5 #>   name      red green  blue alpha #>   <chr>   <int> <int> <int> <int> #> 1 red       255     0     0   255 #> 2 green       0   255     0   255 #> 3 #45fa32    69   250    50   255"},{"path":"https://yogat3ch.github.io/UU/reference/color_separate.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate a vector of colors based on their distance — color_separate","title":"Separate a vector of colors based on their distance — color_separate","text":"Separate vector colors based distance","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_separate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate a vector of colors based on their distance — color_separate","text":"","code":"color_separate(x)"},{"path":"https://yogat3ch.github.io/UU/reference/color_separate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate a vector of colors based on their distance — color_separate","text":"x chr Vector hex rgb/rgba color values","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_separate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate a vector of colors based on their distance — color_separate","text":"chr original vector, sorted contrast","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_separate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate a vector of colors based on their distance — color_separate","text":"","code":"color_separate(c(\"rgba(18,180,211,1)\", \"rgba(2,120,170,1)\", \"rgba(0,57,73,1)\", \"rgba(72,36,18,1)\", \"rgba(111,96,140,1)\", \"rgba(0,166,212,1)\", \"rgba(9,119,168,1)\")) #> [1] \"rgba(18,180,211,1)\" \"rgba(72,36,18,1)\"   \"rgba(0,166,212,1)\"  #> [4] \"rgba(0,57,73,1)\"    \"rgba(2,120,170,1)\"  \"rgba(111,96,140,1)\" #> [7] \"rgba(9,119,168,1)\""},{"path":"https://yogat3ch.github.io/UU/reference/color_text_by_luminance.html","id":null,"dir":"Reference","previous_headings":"","what":"Set text color based on luminance — color_text_by_luminance","title":"Set text color based on luminance — color_text_by_luminance","text":"Useful applying one another text colors based luminance background","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_text_by_luminance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set text color based on luminance — color_text_by_luminance","text":"","code":"color_text_by_luminance(colors, text_light = \"white\", text_dark = \"black\")"},{"path":"https://yogat3ch.github.io/UU/reference/color_text_by_luminance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set text color based on luminance — color_text_by_luminance","text":"colors chr css colors text_light chr CSS color light text text_dark chr CSS color dark text","code":""},{"path":"https://yogat3ch.github.io/UU/reference/color_text_by_luminance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set text color based on luminance — color_text_by_luminance","text":"chr CSS text colors","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/color_text_by_luminance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set text color based on luminance — color_text_by_luminance","text":"","code":"color_text_by_luminance(c(\"white\", \"magenta\", \"red\", \"brown\", \"yellow\")) #> [1] \"black\" \"white\" \"white\" \"white\" \"black\""},{"path":"https://yogat3ch.github.io/UU/reference/colors2css.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","title":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","text":"Convert list colors SCSS/Sass variables classes","code":""},{"path":"https://yogat3ch.github.io/UU/reference/colors2css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","text":"","code":"colors2css(colors, file = \"\", sass_vars = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/colors2css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","text":"file connection, character string naming file     print .  \"\" (default), cat prints     standard output connection, console unless redirected     sink.     \"|cmd\", output piped command given     cmd, opening pipe connection. color_theme 2-layer list dark/light themes","code":""},{"path":"https://yogat3ch.github.io/UU/reference/colors2css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","text":"msg Sass/SCSS formatted variables classes","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/colors2css.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of colors to SCSS/Sass variables or classes — colors2css","text":"","code":"colors2css(c(a = \"white\", b = \"green\")) #> [1] \"$a: white;\" \"$b: green;\""},{"path":"https://yogat3ch.github.io/UU/reference/common_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the names in common — common_names","title":"Find the names in common — common_names","text":"Given named objects, find names common","code":""},{"path":"https://yogat3ch.github.io/UU/reference/common_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the names in common — common_names","text":"","code":"common_names(...)"},{"path":"https://yogat3ch.github.io/UU/reference/common_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the names in common — common_names","text":"... (objects)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/common_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the names in common — common_names","text":"(character) common names","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a math comparator to it's inverse — comparison_inverse","title":"Convert a math comparator to it's inverse — comparison_inverse","text":"Convert math comparator inverse","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a math comparator to it's inverse — comparison_inverse","text":"","code":"comparison_inverse(x)"},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a math comparator to it's inverse — comparison_inverse","text":"x chr/fun Math comparator, one <, >, <=, >=","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a math comparator to it's inverse — comparison_inverse","text":"chr/fun inverse comparator class x","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a math comparator to it's inverse — comparison_inverse","text":"","code":"comparison_inverse(\">=\") #> [1] \"<\""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Math comparison comparator inverse key — comparison_inverse_key","title":"Math comparison comparator inverse key — comparison_inverse_key","text":"Math comparison comparator inverse key","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Math comparison comparator inverse key — comparison_inverse_key","text":"","code":"comparison_inverse_key"},{"path":"https://yogat3ch.github.io/UU/reference/comparison_inverse_key.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Math comparison comparator inverse key — comparison_inverse_key","text":"object class tbl_df (inherits tbl, data.frame) 4 rows 2 columns.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Math comparison comparator to plain english key — comparison_key","title":"Math comparison comparator to plain english key — comparison_key","text":"Math comparison comparator plain english key","code":""},{"path":"https://yogat3ch.github.io/UU/reference/comparison_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Math comparison comparator to plain english key — comparison_key","text":"","code":"comparison_key"},{"path":"https://yogat3ch.github.io/UU/reference/comparison_key.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Math comparison comparator to plain english key — comparison_key","text":"object class character length 7.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/concat_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate row values in a poorly scraped table — concat_rows","title":"Concatenate row values in a poorly scraped table — concat_rows","text":"Concatenate row values poorly scraped table","code":""},{"path":"https://yogat3ch.github.io/UU/reference/concat_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate row values in a poorly scraped table — concat_rows","text":"","code":"concat_rows(.data, col_to_check = 1)"},{"path":"https://yogat3ch.github.io/UU/reference/concat_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate row values in a poorly scraped table — concat_rows","text":".data tbl data empty rows col_to_check num column rows populated subsequent rows collapsed.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/concat_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate row values in a poorly scraped table — concat_rows","text":"tbl","code":""},{"path":"https://yogat3ch.github.io/UU/reference/create_simple_get_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","title":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","text":"Useful object depends long running task database query.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/create_simple_get_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","text":"","code":"create_simple_get_function(obj_nm, env_expr, call_expr, as_character = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/create_simple_get_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","text":"obj_nm chr Name object call_expr expr code used construct object object already constructed as_character function return code character? (Default expression) ns_chr expr/chr name namespace assign object , expression returns environment assign ","code":""},{"path":"https://yogat3ch.github.io/UU/reference/create_simple_get_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","text":"chr function console copy/paste","code":""},{"path":"https://yogat3ch.github.io/UU/reference/create_simple_get_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a function that creates an object and assigns it to a namespace the first time it's called and subsequently retrieves it from the namespace thereafter. — create_simple_get_function","text":"","code":"create_simple_get_function(\"mt_cars\", .GlobalEnv, dplyr::mutate(mtcars, cyl = as.character(cyl))) #> .Primitive(\"<-\")(get_mt_cars, function (env = .GlobalEnv)  #> { #>     if (exists(\"mt_cars\", envir = env)) { #>         get0(\"mt_cars\", envir = env) #>     } #>     else { #>         dplyr::mutate(mtcars, cyl = as.character(cyl)) #>     } #> }) #> .Primitive(\"<-\")(get_mt_cars, function (env = .GlobalEnv)  #> { #>     if (exists(\"mt_cars\", envir = env)) { #>         get0(\"mt_cars\", envir = env) #>     } #>     else { #>         dplyr::mutate(mtcars, cyl = as.character(cyl)) #>     } #> })"},{"path":"https://yogat3ch.github.io/UU/reference/creds_to_renviron.html","id":null,"dir":"Reference","previous_headings":"","what":"Write named keypairs to an .Renviron / .Rprofile file — creds_to_renviron","title":"Write named keypairs to an .Renviron / .Rprofile file — creds_to_renviron","text":"Writes key pairs .Renviron / .Rprofile adds .Renviron .gitignore already .","code":""},{"path":"https://yogat3ch.github.io/UU/reference/creds_to_renviron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write named keypairs to an .Renviron / .Rprofile file — creds_to_renviron","text":"","code":"creds_to_renviron(   ...,   scope = c(\"user\", \"project\")[1],   overwrite = FALSE,   proj_dir = \".\",   rprofile = FALSE )"},{"path":"https://yogat3ch.github.io/UU/reference/creds_to_renviron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write named keypairs to an .Renviron / .Rprofile file — creds_to_renviron","text":"... named keys write scope chr Edit globally current user, locally current project overwrite (lgl) existing key pair overwritten. Default: FALSE proj_dir (chr) project directory write credentials rprofile (lgl) whether write keypairs options call .Rprofile file instead.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/creds_to_renviron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write named keypairs to an .Renviron / .Rprofile file — creds_to_renviron","text":"success message value written","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","title":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","text":"Convert CSS representation color r,g,b numeric","code":""},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","text":"","code":"css_col2vec(x)"},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","text":"x chr CSS Vector hexadecimal rgb/rgba format","code":""},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","text":"num names r,g,b","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a CSS representation of a color to an r,g,b numeric — css_col2vec","text":"","code":"css_col2vec(\"#12B4D3\") #>   red green  blue alpha  #>    18   180   211   255  css_col2vec(\"rgba(111,96,140,1)\") #>   red green  blue alpha  #>   111    96   140     1  css_col2vec(\"green\") #>   red green  blue alpha  #>     0   255     0   255"},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec_.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized version of css_col2vec — css_col2vec_","title":"Vectorized version of css_col2vec — css_col2vec_","text":"Vectorized version css_col2vec","code":""},{"path":"https://yogat3ch.github.io/UU/reference/css_col2vec_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized version of css_col2vec — css_col2vec_","text":"","code":"css_col2vec_(x)"},{"path":"https://yogat3ch.github.io/UU/reference/dep_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a dependency from file — dep_read","title":"Read a dependency from file — dep_read","text":"Read dependency file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dep_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a dependency from file — dep_read","text":"","code":"dep_read(filename, ...)  object_read(filename, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/dep_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a dependency from file — dep_read","text":"filename (chr) path file ... Passed read function. See file_fn function used based filename","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dep_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a dependency from file — dep_read","text":"file contents","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/dep_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a dependency to file — dep_write","title":"Write a dependency to file — dep_write","text":"Write dependency file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dep_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a dependency to file — dep_write","text":"","code":"dep_write(x, filename, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/dep_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a dependency to file — dep_write","text":"x (object) written filename (chr) path file ... Passed write function. See file_fn function used based filename","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dep_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a dependency to file — dep_write","text":"(message) indicating success","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/dir_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a directory path pointing function — dir_fn","title":"Create a directory path pointing function — dir_fn","text":"Create directory path pointing function","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dir_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a directory path pointing function — dir_fn","text":"","code":"dir_fn(base_dir)"},{"path":"https://yogat3ch.github.io/UU/reference/dir_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a directory path pointing function — dir_fn","text":"base_dir (chr) base directory path point","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dir_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a directory path pointing function — dir_fn","text":"(fun) pointing function using path","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/dir_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a directory path pointing function — dir_fn","text":"","code":"dir_fn(\"data\")(\"random_data\", \"file\", ext = \"txt\") #> data/random_data/file.txt"},{"path":"https://yogat3ch.github.io/UU/reference/dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Path functions for commonly used directories — dirs","title":"Path functions for commonly used directories — dirs","text":"Path functions commonly used directories","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path functions for commonly used directories — dirs","text":"","code":"dirs\\$data()"},{"path":"https://yogat3ch.github.io/UU/reference/dirs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Path functions for commonly used directories — dirs","text":"object class list length 13.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path functions for commonly used directories — dirs","text":"... (chr) directory paths mkpath lgl Whether return path regardless whether file/dir exists ext (chr) file extension mustWork lgl TRUE, error given matching files.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/dirs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path functions for commonly used directories — dirs","text":"","code":"dirs$data(\"mydata\", ext = \"csv\", mkpath = TRUE) #> data/mydata/TRUE.csv"},{"path":"https://yogat3ch.github.io/UU/reference/dot-file.html","id":null,"dir":"Reference","previous_headings":"","what":"All the files that can be navigated to with file if they exist — .file","title":"All the files that can be navigated to with file if they exist — .file","text":"files can navigated file exist","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dot-file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All the files that can be navigated to with file if they exist — .file","text":"","code":".file"},{"path":"https://yogat3ch.github.io/UU/reference/dot-file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All the files that can be navigated to with file if they exist — .file","text":"object class character length 14.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/dot-time_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Timespans as factor — .time_factor","title":"Timespans as factor — .time_factor","text":"Timespans factor","code":""},{"path":"https://yogat3ch.github.io/UU/reference/dot-time_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timespans as factor — .time_factor","text":"","code":".time_factor"},{"path":"https://yogat3ch.github.io/UU/reference/dot-time_factor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Timespans as factor — .time_factor","text":"object class ordered (inherits factor) length 7.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/duration_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a duration into the human-legible estimation as a character — duration_print","title":"Translate a duration into the human-legible estimation as a character — duration_print","text":"Translate duration human-legible estimation character","code":""},{"path":"https://yogat3ch.github.io/UU/reference/duration_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a duration into the human-legible estimation as a character — duration_print","text":"","code":"duration_print(duration)"},{"path":"https://yogat3ch.github.io/UU/reference/duration_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a duration into the human-legible estimation as a character — duration_print","text":"duration Duration","code":""},{"path":"https://yogat3ch.github.io/UU/reference/duration_print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a duration into the human-legible estimation as a character — duration_print","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/duration_print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a duration into the human-legible estimation as a character — duration_print","text":"","code":"duration_print(lubridate::period(6223)) #> [1] NA"},{"path":"https://yogat3ch.github.io/UU/reference/evens.html","id":null,"dir":"Reference","previous_headings":"","what":"Get even numbers — evens","title":"Get even numbers — evens","text":"Get even numbers","code":""},{"path":"https://yogat3ch.github.io/UU/reference/evens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get even numbers — evens","text":"","code":"evens(x)"},{"path":"https://yogat3ch.github.io/UU/reference/evens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get even numbers — evens","text":"x int","code":""},{"path":"https://yogat3ch.github.io/UU/reference/evens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get even numbers — evens","text":"","code":"evens(1:10) #> [1]  2  4  6  8 10"},{"path":"https://yogat3ch.github.io/UU/reference/excel_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Excel character date representation to a Date — excel_date","title":"Convert Excel character date representation to a Date — excel_date","text":"Convert Excel character date representation Date","code":""},{"path":"https://yogat3ch.github.io/UU/reference/excel_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Excel character date representation to a Date — excel_date","text":"","code":"excel_date(.x)"},{"path":"https://yogat3ch.github.io/UU/reference/excel_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Excel character date representation to a Date — excel_date","text":".x chr representation Dates Excel, usually 5 digit number","code":""},{"path":"https://yogat3ch.github.io/UU/reference/excel_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Excel character date representation to a Date — excel_date","text":"Date","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/excel_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Excel character date representation to a Date — excel_date","text":"","code":"excel_date(c(\"44567\", \"44568\")) #> [1] \"2022-01-06\" \"2022-01-07\""},{"path":"https://yogat3ch.github.io/UU/reference/expr_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list of expressions all piped together as a single expression — expr_pipe","title":"Return a list of expressions all piped together as a single expression — expr_pipe","text":"Return list expressions piped together single expression","code":""},{"path":"https://yogat3ch.github.io/UU/reference/expr_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list of expressions all piped together as a single expression — expr_pipe","text":"","code":"expr_pipe(exprs)"},{"path":"https://yogat3ch.github.io/UU/reference/expr_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a list of expressions all piped together as a single expression — expr_pipe","text":"exprs expressions See exprs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/expr_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list of expressions all piped together as a single expression — expr_pipe","text":"expression","code":""},{"path":"https://yogat3ch.github.io/UU/reference/expr_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a list of expressions all piped together as a single expression — expr_pipe","text":"","code":"ex <- tibble::tibble(cat = rep(letters, length.out = 6, each = 2), val = runif(6, 0, 10)) exps <- rlang::exprs(   data,   dplyr::mutate(data, val = val  + 3) ) make_exp <- function(data, addtl_exp, summarise = TRUE) {   if (summarise) {     addtl_exp <- append(       addtl_exp,       rlang::exprs(         dplyr::group_by(cat),         dplyr::summarise(val = sum(val))       )     )   }   rlang::eval_bare(expr_pipe(addtl_exp)) } make_exp(ex, exps) #> # A tibble: 3 × 2 #>   cat     val #>   <chr> <dbl> #> 1 a      9.58 #> 2 b     16.0  #> 3 c      7.62 make_exp(ex, exps, FALSE) #> # A tibble: 6 × 2 #>   cat     val #>   <chr> <dbl> #> 1 a      3.70 #> 2 a      5.89 #> 3 b      7.04 #> 4 b      8.94 #> 5 c      4.45 #> 6 c      3.17"},{"path":"https://yogat3ch.github.io/UU/reference/ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the file extensions from a filepath — ext","title":"Extract the file extensions from a filepath — ext","text":"Given path, extract file extension","code":""},{"path":"https://yogat3ch.github.io/UU/reference/ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the file extensions from a filepath — ext","text":"","code":"ext(path, strip = FALSE, new_ext)"},{"path":"https://yogat3ch.github.io/UU/reference/ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the file extensions from a filepath — ext","text":"path (character) path strip (logical) Whether strip extension path return bare file name new_ext chr New extension filename","code":""},{"path":"https://yogat3ch.github.io/UU/reference/ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the file extensions from a filepath — ext","text":"(character) extensions","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/file.html","id":null,"dir":"Reference","previous_headings":"","what":"Go to a specified file — file","title":"Go to a specified file — file","text":"List object convenience functions open named file RStudio. R named sublist files R folder folder exists","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Go to a specified file — file","text":"","code":"file"},{"path":"https://yogat3ch.github.io/UU/reference/file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Go to a specified file — file","text":"object class list length 5.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Go to a specified file — file","text":"path chr file go . method preset default based function name, path can used go file specified.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/file_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the appropriate function for reading the specified path/extension — file_fn","title":"Return the appropriate function for reading the specified path/extension — file_fn","text":"Return appropriate function reading specified path/extension","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the appropriate function for reading the specified path/extension — file_fn","text":"","code":"file_fn(x, write = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/file_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the appropriate function for reading the specified path/extension — file_fn","text":"x (character) extension name path file write (logical) Return writing function? Default FALSE return reading function","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the appropriate function for reading the specified path/extension — file_fn","text":"(function)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/file_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the appropriate function for reading the specified path/extension — file_fn","text":"","code":"file_fn(\"csv\") #> function (con = stdin(), n = -1L, ok = TRUE, warn = TRUE, encoding = \"unknown\",  #>     skipNul = FALSE)  #> { #>     if (is.character(con)) { #>         con <- file(con, \"r\") #>         on.exit(close(con)) #>     } #>     .Internal(readLines(con, n, ok, warn, encoding, skipNul)) #> } #> <bytecode: 0x55a745ebd6e0> #> <environment: namespace:base> file_fn(\"csv\", write = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/file_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a file path compliant ISO8601 timestamp — file_timestamp","title":"Make a file path compliant ISO8601 timestamp — file_timestamp","text":"Make file path compliant ISO8601 timestamp","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a file path compliant ISO8601 timestamp — file_timestamp","text":"","code":"file_timestamp(x = Sys.time(), tzone = \"\")"},{"path":"https://yogat3ch.github.io/UU/reference/file_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a file path compliant ISO8601 timestamp — file_timestamp","text":"x Datetime tzone character string containing time zone convert . R must recognize name contained string time zone system.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file_timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a file path compliant ISO8601 timestamp — file_timestamp","text":"chr timestamp","code":""},{"path":"https://yogat3ch.github.io/UU/reference/file_timestamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a file path compliant ISO8601 timestamp — file_timestamp","text":"","code":"fs::path(paste0(\"file_\", file_timestamp()), ext = \"zip\") #> file_2023-10-02T17.46.07.zip"},{"path":"https://yogat3ch.github.io/UU/reference/filter_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Change or apply filters to output type — filter_to","title":"Change or apply filters to output type — filter_to","text":"Useful concert axis brushing","code":""},{"path":"https://yogat3ch.github.io/UU/reference/filter_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change or apply filters to output type — filter_to","text":"","code":"filter_to(filters, out_type = character(), .data)"},{"path":"https://yogat3ch.github.io/UU/reference/filter_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change or apply filters to output type — filter_to","text":"filters list named filters use. filter named column name range length two numeric vector out_type obj desired output type .data tbl data use out_type = logical()/data.frame()","code":""},{"path":"https://yogat3ch.github.io/UU/reference/filter_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change or apply filters to output type — filter_to","text":"obj class out_type","code":""},{"path":"https://yogat3ch.github.io/UU/reference/filter_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change or apply filters to output type — filter_to","text":"","code":"f <- list(wt = c(1,5)) d <- data.frame(wt = 1:10) filter_to(f) #> wt: 1 - 5  #>      \"wt\"  filter_to(f, out_type = data.frame(), .data = d) #>   wt #> 1  1 #> 2  2 #> 3  3 #> 4  4 #> 5  5"},{"path":"https://yogat3ch.github.io/UU/reference/find_by_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an object by it's class — find_by_class","title":"Find an object by it's class — find_by_class","text":"Find object class","code":""},{"path":"https://yogat3ch.github.io/UU/reference/find_by_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an object by it's class — find_by_class","text":"","code":"find_by_class(class, e = rlang::caller_env())"},{"path":"https://yogat3ch.github.io/UU/reference/find_by_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an object by it's class — find_by_class","text":"(environment) environment search (class) class search ","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fml_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function formals as a list — fml_list","title":"Print function formals as a list — fml_list","text":"Print function formals list","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fml_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function formals as a list — fml_list","text":"","code":"fml_list(f, paired = TRUE, to_console = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/fml_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function formals as a list — fml_list","text":"f fun paired lgl Whether output paired arguments passed another function. to_console lgl whether print dput output console. ** Default: FALSE **","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fml_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function formals as a list — fml_list","text":"msg","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fml_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print function formals as a list — fml_list","text":"","code":"fml_list(base::apply) #> $X #> X #>  #> $MARGIN #> MARGIN #>  #> $FUN #> FUN #>  #> $... #> ... #>  #> $simplify #> simplify #>"},{"path":"https://yogat3ch.github.io/UU/reference/fn_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the function name — fn_name","title":"Retrieve the function name — fn_name","text":"Sometimes function passed call stack name unknown. function finds name without pass call stack argument.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fn_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the function name — fn_name","text":"","code":"fn_name(fn)"},{"path":"https://yogat3ch.github.io/UU/reference/fn_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the function name — fn_name","text":"fn (function) retrieve name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fn_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the function name — fn_name","text":"(character) functions name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Go to a specified folder — folder","title":"Go to a specified folder — folder","text":"Go specified folder","code":""},{"path":"https://yogat3ch.github.io/UU/reference/folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Go to a specified folder — folder","text":"","code":"folder"},{"path":"https://yogat3ch.github.io/UU/reference/folder.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Go to a specified folder — folder","text":"object class list length 4.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Go to a specified folder — folder","text":"path chr go . method preset default based function name, method can used go folder specified.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/formula_make.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formula given predictors and a label (response variable) — formula_make","title":"Create a formula given predictors and a label (response variable) — formula_make","text":"Create formula given predictors label (response variable)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/formula_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formula given predictors and a label (response variable) — formula_make","text":"","code":"formula_make(predictors, label = \"response\")"},{"path":"https://yogat3ch.github.io/UU/reference/formula_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formula given predictors and a label (response variable) — formula_make","text":"predictors chr Column names used prediction label chr Column name response variable","code":""},{"path":"https://yogat3ch.github.io/UU/reference/formula_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formula given predictors and a label (response variable) — formula_make","text":"formula","code":""},{"path":"https://yogat3ch.github.io/UU/reference/formula_make.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formula given predictors and a label (response variable) — formula_make","text":"","code":"formula_make(predictors = c(\"max2yrlfflow\", \"min2yrlfflow\")) #> response ~ max2yrlfflow + min2yrlfflow #> <environment: 0x55a74e19f778>"},{"path":"https://yogat3ch.github.io/UU/reference/fun_docs_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of functions and their uses — fun_docs_table","title":"Create a table of functions and their uses — fun_docs_table","text":"Create table functions uses","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fun_docs_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of functions and their uses — fun_docs_table","text":"","code":"fun_docs_table(package = pkgload::pkg_name())"},{"path":"https://yogat3ch.github.io/UU/reference/fun_docs_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of functions and their uses — fun_docs_table","text":"package chr package name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/fun_docs_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of functions and their uses — fun_docs_table","text":"shiny.tag","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/gbort.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom error message — gbort","title":"Custom error message — gbort","text":"Throw abort format_error","code":""},{"path":"https://yogat3ch.github.io/UU/reference/gbort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom error message — gbort","text":"","code":"gbort(   message = NULL,   class = NULL,   ...,   trace = rlang::trace_back(bottom = 2),   parent = NULL,   e = rlang::caller_env() )"},{"path":"https://yogat3ch.github.io/UU/reference/gbort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom error message — gbort","text":"message (chr) message display, formatted bulleted list. first element displayed alert bullet prefixed ! default. Elements named \"*\", \"\", \"x\" formatted regular, info, cross bullets respectively. See topic-condition-formatting bulleted messaging. class (class) Subclass condition trace (trace) trace object created trace_back parent (cond) Supply parent rethrow error condition handler e (environment) calling environment. Passed glue making message","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/get_from_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an object from a namespace — get_from_ns","title":"Get an object from a namespace — get_from_ns","text":"Get object namespace","code":""},{"path":"https://yogat3ch.github.io/UU/reference/get_from_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an object from a namespace — get_from_ns","text":"","code":"get_from_ns(nm = c(\"active\", \"state\")[1], .env = .GlobalEnv)"},{"path":"https://yogat3ch.github.io/UU/reference/get_from_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an object from a namespace — get_from_ns","text":"nm chr name object retrieve. Current active & state. .env env retrieve object active tracks app details internal use state tracks user-specified variables saved/exported","code":""},{"path":"https://yogat3ch.github.io/UU/reference/get_from_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an object from a namespace — get_from_ns","text":"obj","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/get_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an object from the global environment — get_global","title":"Get an object from the global environment — get_global","text":"Get object global environment","code":""},{"path":"https://yogat3ch.github.io/UU/reference/get_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an object from the global environment — get_global","text":"","code":"get_global(global = \"active\")"},{"path":"https://yogat3ch.github.io/UU/reference/get_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an object from the global environment — get_global","text":"obj","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/get_global.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an object from the global environment — get_global","text":"","code":"get_global(\".Last.value\") #> $repos #> NULL #>  #> $Ncpus #> NULL #>  #> $HTTPUserAgent #> [1] \"R/4.3.1 (ubuntu-22.04) R (4.3.1 x86_64-pc-linux-gnu x86_64 linux-gnu)\" #>"},{"path":"https://yogat3ch.github.io/UU/reference/get_package_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of all exported functions in a package — get_package_fns","title":"Get the names of all exported functions in a package — get_package_fns","text":"Get names exported functions package","code":""},{"path":"https://yogat3ch.github.io/UU/reference/get_package_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of all exported functions in a package — get_package_fns","text":"","code":"get_package_fns(x, all.names = FALSE, pattern, negate = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/get_package_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of all exported functions in a package — get_package_fns","text":"x (character) Package name .names (logical) Include names begin characters . _ etc","code":""},{"path":"https://yogat3ch.github.io/UU/reference/get_package_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of all exported functions in a package — get_package_fns","text":"(character)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/get_package_fns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of all exported functions in a package — get_package_fns","text":"","code":"get_package_fns(\"dplyr\") #>   [1] \"$<-.grouped_df\"                                        #>   [2] \"DataMask\"                                              #>   [3] \"IS_NUMBER_false\"                                       #>   [4] \"IS_NUMBER_oob\"                                         #>   [5] \"IS_NUMBER_true\"                                        #>   [6] \"Progress\"                                              #>   [7] \"[.fun_list\"                                            #>   [8] \"[.grouped_df\"                                          #>   [9] \"[.rowwise_df\"                                          #>  [10] \"[<-.grouped_df\"                                        #>  [11] \"[<-.rowwise_df\"                                        #>  [12] \"[[<-.grouped_df\"                                       #>  [13] \"accumulate\"                                            #>  [14] \"accumulate_right\"                                      #>  [15] \"across\"                                                #>  [16] \"across_glue_mask\"                                      #>  [17] \"across_missing_cols_deprecate_warn\"                    #>  [18] \"across_setup\"                                          #>  [19] \"add_computed_columns\"                                  #>  [20] \"add_count\"                                             #>  [21] \"add_count.data.frame\"                                  #>  [22] \"add_count.default\"                                     #>  [23] \"add_count_\"                                            #>  [24] \"add_count_impl\"                                        #>  [25] \"add_rownames\"                                          #>  [26] \"add_suffixes\"                                          #>  [27] \"add_tally\"                                             #>  [28] \"add_tally_\"                                            #>  [29] \"all_equal\"                                             #>  [30] \"all_exprs\"                                             #>  [31] \"all_vars\"                                              #>  [32] \"anti_join\"                                             #>  [33] \"anti_join.data.frame\"                                  #>  [34] \"any_exprs\"                                             #>  [35] \"any_vars\"                                              #>  [36] \"append_pos\"                                            #>  [37] \"apply_filter_syms\"                                     #>  [38] \"apply_unpack_spec\"                                     #>  [39] \"arrange\"                                               #>  [40] \"arrange.data.frame\"                                    #>  [41] \"arrange_\"                                              #>  [42] \"arrange_.data.frame\"                                   #>  [43] \"arrange_.tbl_df\"                                       #>  [44] \"arrange_all\"                                           #>  [45] \"arrange_at\"                                            #>  [46] \"arrange_if\"                                            #>  [47] \"arrange_rows\"                                          #>  [48] \"as.data.frame.grouped_df\"                              #>  [49] \"as.tbl\"                                                #>  [50] \"as.tbl.data.frame\"                                     #>  [51] \"as.tbl.tbl\"                                            #>  [52] \"as_across_fn_call\"                                     #>  [53] \"as_fun\"                                                #>  [54] \"as_fun_list\"                                           #>  [55] \"as_group_map_function\"                                 #>  [56] \"as_inlined_function\"                                   #>  [57] \"as_join_by\"                                            #>  [58] \"as_join_by.character\"                                  #>  [59] \"as_join_by.default\"                                    #>  [60] \"as_join_by.dplyr_join_by\"                              #>  [61] \"as_join_by.list\"                                       #>  [62] \"as_pick_expansion\"                                     #>  [63] \"as_pick_selection\"                                     #>  [64] \"as_tibble.grouped_df\"                                  #>  [65] \"as_tibble.rowwise_df\"                                  #>  [66] \"auto_by_msg\"                                           #>  [67] \"auto_copy\"                                             #>  [68] \"auto_copy.data.frame\"                                  #>  [69] \"auto_name_formulas\"                                    #>  [70] \"bench_tbls\"                                            #>  [71] \"between\"                                               #>  [72] \"big_mark\"                                              #>  [73] \"bind_cols\"                                             #>  [74] \"bind_rows\"                                             #>  [75] \"binding_join_by_between\"                               #>  [76] \"binding_join_by_binary\"                                #>  [77] \"binding_join_by_closest\"                               #>  [78] \"binding_join_by_dollar\"                                #>  [79] \"binding_join_by_equality\"                              #>  [80] \"binding_join_by_greater_than\"                          #>  [81] \"binding_join_by_greater_than_or_equal\"                 #>  [82] \"binding_join_by_less_than\"                             #>  [83] \"binding_join_by_less_than_or_equal\"                    #>  [84] \"binding_join_by_overlaps\"                              #>  [85] \"binding_join_by_within\"                                #>  [86] \"bullets\"                                               #>  [87] \"c_across\"                                              #>  [88] \"c_across_missing_cols_deprecate_warn\"                  #>  [89] \"c_across_setup\"                                        #>  [90] \"can_return_from_exit\"                                  #>  [91] \"case_formula_evaluate\"                                 #>  [92] \"case_match\"                                            #>  [93] \"case_when\"                                             #>  [94] \"cat_line\"                                              #>  [95] \"cbind.grouped_df\"                                      #>  [96] \"changes\"                                               #>  [97] \"check_arg\"                                             #>  [98] \"check_bool\"                                            #>  [99] \"check_bounds\"                                          #> [100] \"check_by\"                                              #> [101] \"check_by_typo\"                                         #> [102] \"check_by_typo_impl\"                                    #> [103] \"check_call\"                                            #> [104] \"check_character\"                                       #> [105] \"check_class\"                                           #> [106] \"check_closure\"                                         #> [107] \"check_compatible\"                                      #> [108] \"check_constant\"                                        #> [109] \"check_dbplyr\"                                          #> [110] \"check_dot_by_typo\"                                     #> [111] \"check_dot_cols\"                                        #> [112] \"check_duplicate_vars\"                                  #> [113] \"check_environment\"                                     #> [114] \"check_filter\"                                          #> [115] \"check_formula\"                                         #> [116] \"check_frac\"                                            #> [117] \"check_function\"                                        #> [118] \"check_grouped\"                                         #> [119] \"check_join_by_dots_empty\"                              #> [120] \"check_join_relationship\"                               #> [121] \"check_join_vars\"                                       #> [122] \"check_keep\"                                            #> [123] \"check_length\"                                          #> [124] \"check_length_val\"                                      #> [125] \"check_logical\"                                         #> [126] \"check_missing_arg\"                                     #> [127] \"check_muffled_warning\"                                 #> [128] \"check_n_name\"                                          #> [129] \"check_na_matches\"                                      #> [130] \"check_name\"                                            #> [131] \"check_nth_default\"                                     #> [132] \"check_number_decimal\"                                  #> [133] \"check_number_whole\"                                    #> [134] \"check_size\"                                            #> [135] \"check_slice_n_prop\"                                    #> [136] \"check_slice_unnamed_n_prop\"                            #> [137] \"check_string\"                                          #> [138] \"check_symbol\"                                          #> [139] \"check_transmute_args\"                                  #> [140] \"check_type\"                                            #> [141] \"check_unmatched\"                                       #> [142] \"clamp\"                                                 #> [143] \"cli_collapse\"                                          #> [144] \"cnd_bullet_combine_details\"                            #> [145] \"cnd_bullet_cur_group_label\"                            #> [146] \"cnd_bullet_header\"                                     #> [147] \"cnd_bullet_rowwise_unlist\"                             #> [148] \"cnd_data\"                                              #> [149] \"cnd_message_lines\"                                     #> [150] \"coalesce\"                                              #> [151] \"collapse\"                                              #> [152] \"collapse.data.frame\"                                   #> [153] \"collect\"                                               #> [154] \"collect.data.frame\"                                    #> [155] \"combine\"                                               #> [156] \"commas\"                                                #> [157] \"common_by\"                                             #> [158] \"common_by.NULL\"                                        #> [159] \"common_by.character\"                                   #> [160] \"common_by.default\"                                     #> [161] \"common_by.list\"                                        #> [162] \"common_by_from_vector\"                                 #> [163] \"common_handler\"                                        #> [164] \"compact\"                                               #> [165] \"compact_null\"                                          #> [166] \"compare_tbls\"                                          #> [167] \"compare_tbls2\"                                         #> [168] \"compat_as_lazy\"                                        #> [169] \"compat_as_lazy_dots\"                                   #> [170] \"compat_lazy\"                                           #> [171] \"compat_lazy_dots\"                                      #> [172] \"compute\"                                               #> [173] \"compute.data.frame\"                                    #> [174] \"compute_by\"                                            #> [175] \"compute_by_groups\"                                     #> [176] \"compute_groups\"                                        #> [177] \"compute_join_relationship\"                             #> [178] \"consecutive_id\"                                        #> [179] \"context_env\"                                           #> [180] \"context_local\"                                         #> [181] \"context_peek\"                                          #> [182] \"context_peek_bare\"                                     #> [183] \"context_poke\"                                          #> [184] \"copy_to\"                                               #> [185] \"copy_to.DBIConnection\"                                 #> [186] \"copy_to.src_local\"                                     #> [187] \"count\"                                                 #> [188] \"count.data.frame\"                                      #> [189] \"count_\"                                                #> [190] \"count_regroups\"                                        #> [191] \"cross_join\"                                            #> [192] \"cross_join.data.frame\"                                 #> [193] \"ctxt_error_label\"                                      #> [194] \"ctxt_error_label_named\"                                #> [195] \"cumall\"                                                #> [196] \"cumany\"                                                #> [197] \"cume_dist\"                                             #> [198] \"cummean\"                                               #> [199] \"cur_column\"                                            #> [200] \"cur_data\"                                              #> [201] \"cur_data_all\"                                          #> [202] \"cur_group\"                                             #> [203] \"cur_group_data\"                                        #> [204] \"cur_group_id\"                                          #> [205] \"cur_group_label\"                                       #> [206] \"cur_group_rows\"                                        #> [207] \"current_vars\"                                          #> [208] \"data_mask_top\"                                         #> [209] \"dataframe_ish\"                                         #> [210] \"db_analyze\"                                            #> [211] \"db_begin\"                                              #> [212] \"db_commit\"                                             #> [213] \"db_create_index\"                                       #> [214] \"db_create_indexes\"                                     #> [215] \"db_create_table\"                                       #> [216] \"db_data_type\"                                          #> [217] \"db_desc\"                                               #> [218] \"db_drop_table\"                                         #> [219] \"db_explain\"                                            #> [220] \"db_has_table\"                                          #> [221] \"db_insert_into\"                                        #> [222] \"db_list_tables\"                                        #> [223] \"db_query_fields\"                                       #> [224] \"db_query_rows\"                                         #> [225] \"db_rollback\"                                           #> [226] \"db_save_query\"                                         #> [227] \"db_write_table\"                                        #> [228] \"dense_rank\"                                            #> [229] \"deparse_trunc\"                                         #> [230] \"desc\"                                                  #> [231] \"describe_repair\"                                       #> [232] \"detect\"                                                #> [233] \"detect_index\"                                          #> [234] \"df_unpack\"                                             #> [235] \"dim_desc\"                                              #> [236] \"discard\"                                               #> [237] \"distinct\"                                              #> [238] \"distinct.data.frame\"                                   #> [239] \"distinct_\"                                             #> [240] \"distinct_.data.frame\"                                  #> [241] \"distinct_.grouped_df\"                                  #> [242] \"distinct_.tbl_df\"                                      #> [243] \"distinct_all\"                                          #> [244] \"distinct_at\"                                           #> [245] \"distinct_if\"                                           #> [246] \"distinct_prepare\"                                      #> [247] \"do\"                                                    #> [248] \"do.NULL\"                                               #> [249] \"do.data.frame\"                                         #> [250] \"do.grouped_df\"                                         #> [251] \"do.rowwise_df\"                                         #> [252] \"do_\"                                                   #> [253] \"do_.NULL\"                                              #> [254] \"do_.data.frame\"                                        #> [255] \"do_.grouped_df\"                                        #> [256] \"do_.rowwise_df\"                                        #> [257] \"dplyr_chop\"                                            #> [258] \"dplyr_col_modify\"                                      #> [259] \"dplyr_col_modify.data.frame\"                           #> [260] \"dplyr_col_modify.grouped_df\"                           #> [261] \"dplyr_col_modify.rowwise_df\"                           #> [262] \"dplyr_col_select\"                                      #> [263] \"dplyr_cumall\"                                          #> [264] \"dplyr_cumany\"                                          #> [265] \"dplyr_cummean\"                                         #> [266] \"dplyr_error_call\"                                      #> [267] \"dplyr_error_handler\"                                   #> [268] \"dplyr_expand_groups\"                                   #> [269] \"dplyr_extract_chunks\"                                  #> [270] \"dplyr_group_indices\"                                   #> [271] \"dplyr_group_keys\"                                      #> [272] \"dplyr_init_library\"                                    #> [273] \"dplyr_internal_error\"                                  #> [274] \"dplyr_internal_signal\"                                 #> [275] \"dplyr_lazy_vec_chop_impl\"                              #> [276] \"dplyr_legacy_locale\"                                   #> [277] \"dplyr_local_error_call\"                                #> [278] \"dplyr_local_slice_by_arg\"                              #> [279] \"dplyr_locate_matches\"                                  #> [280] \"dplyr_locate_sorted_groups\"                            #> [281] \"dplyr_make_mask_bindings\"                              #> [282] \"dplyr_mask_binding_add\"                                #> [283] \"dplyr_mask_binding_remove\"                             #> [284] \"dplyr_mask_eval_all\"                                   #> [285] \"dplyr_mask_eval_all_filter\"                            #> [286] \"dplyr_mask_eval_all_mutate\"                            #> [287] \"dplyr_mask_eval_all_summarise\"                         #> [288] \"dplyr_new_data_frame\"                                  #> [289] \"dplyr_new_list\"                                        #> [290] \"dplyr_new_tibble\"                                      #> [291] \"dplyr_order_legacy\"                                    #> [292] \"dplyr_pick_tibble\"                                     #> [293] \"dplyr_proxy_order_legacy\"                              #> [294] \"dplyr_quosure_name\"                                    #> [295] \"dplyr_quosures\"                                        #> [296] \"dplyr_reconstruct\"                                     #> [297] \"dplyr_reconstruct.data.frame\"                          #> [298] \"dplyr_reconstruct.grouped_df\"                          #> [299] \"dplyr_reconstruct.rowwise_df\"                          #> [300] \"dplyr_reconstruct_dispatch\"                            #> [301] \"dplyr_row_slice\"                                       #> [302] \"dplyr_row_slice.data.frame\"                            #> [303] \"dplyr_row_slice.grouped_df\"                            #> [304] \"dplyr_row_slice.rowwise_df\"                            #> [305] \"dplyr_summarise_recycle_chunks_in_place\"               #> [306] \"dplyr_validate_grouped_df\"                             #> [307] \"dplyr_validate_rowwise_df\"                             #> [308] \"dplyr_vec_cast_common\"                                 #> [309] \"dplyr_vec_ptype_common\"                                #> [310] \"dplyr_warning_handler\"                                 #> [311] \"ensure_group_vars\"                                     #> [312] \"env_bind_do_pronouns\"                                  #> [313] \"env_inherits_global\"                                   #> [314] \"env_resolved\"                                          #> [315] \"equal_data_frame\"                                      #> [316] \"err_expr\"                                              #> [317] \"err_locs\"                                              #> [318] \"err_vars\"                                              #> [319] \"error_call\"                                            #> [320] \"error_label\"                                           #> [321] \"error_label_named\"                                     #> [322] \"error_name_length_required\"                            #> [323] \"eval_join_by_between\"                                  #> [324] \"eval_join_by_binary\"                                   #> [325] \"eval_join_by_closest\"                                  #> [326] \"eval_join_by_dollar\"                                   #> [327] \"eval_join_by_overlaps\"                                 #> [328] \"eval_join_by_within\"                                   #> [329] \"eval_pick\"                                             #> [330] \"eval_relocate\"                                         #> [331] \"eval_select_by\"                                        #> [332] \"eval_tbls\"                                             #> [333] \"eval_tbls2\"                                            #> [334] \"every\"                                                 #> [335] \"expand_across\"                                         #> [336] \"expand_groups\"                                         #> [337] \"expand_if_across\"                                      #> [338] \"expand_pick\"                                           #> [339] \"expand_pick_call\"                                      #> [340] \"expand_pick_quo\"                                       #> [341] \"explain\"                                               #> [342] \"expr_substitute\"                                       #> [343] \"failwith\"                                              #> [344] \"filter\"                                                #> [345] \"filter.data.frame\"                                     #> [346] \"filter.ts\"                                             #> [347] \"filter_\"                                               #> [348] \"filter_.data.frame\"                                    #> [349] \"filter_.tbl_df\"                                        #> [350] \"filter_all\"                                            #> [351] \"filter_at\"                                             #> [352] \"filter_bullets\"                                        #> [353] \"filter_bullets.dplyr:::filter_incompatible_size\"       #> [354] \"filter_bullets.dplyr:::filter_incompatible_type\"       #> [355] \"filter_eval\"                                           #> [356] \"filter_expand\"                                         #> [357] \"filter_if\"                                             #> [358] \"filter_rows\"                                           #> [359] \"finalise_equi_join_by\"                                 #> [360] \"find_template\"                                         #> [361] \"find_var\"                                              #> [362] \"first\"                                                 #> [363] \"flat_map_chr\"                                          #> [364] \"fmt_check_length_val\"                                  #> [365] \"fmt_classes\"                                           #> [366] \"fmt_cols\"                                              #> [367] \"fmt_comma\"                                             #> [368] \"fmt_obj\"                                               #> [369] \"fmt_obj1\"                                              #> [370] \"fmt_pos_args\"                                          #> [371] \"format.src_local\"                                      #> [372] \"from_testthat\"                                         #> [373] \"full_join\"                                             #> [374] \"full_join.data.frame\"                                  #> [375] \"fun_env\"                                               #> [376] \"funs\"                                                  #> [377] \"funs_\"                                                 #> [378] \"get_slice_size\"                                        #> [379] \"group_by\"                                              #> [380] \"group_by.data.frame\"                                   #> [381] \"group_by_\"                                             #> [382] \"group_by_.data.frame\"                                  #> [383] \"group_by_.rowwise_df\"                                  #> [384] \"group_by_all\"                                          #> [385] \"group_by_at\"                                           #> [386] \"group_by_drop_default\"                                 #> [387] \"group_by_drop_default.default\"                         #> [388] \"group_by_drop_default.grouped_df\"                      #> [389] \"group_by_if\"                                           #> [390] \"group_by_prepare\"                                      #> [391] \"group_cols\"                                            #> [392] \"group_cols_legacy\"                                     #> [393] \"group_data\"                                            #> [394] \"group_data.data.frame\"                                 #> [395] \"group_data.grouped_df\"                                 #> [396] \"group_data.rowwise_df\"                                 #> [397] \"group_data.tbl_df\"                                     #> [398] \"group_data_trim\"                                       #> [399] \"group_indices\"                                         #> [400] \"group_indices.data.frame\"                              #> [401] \"group_indices_\"                                        #> [402] \"group_indices_.data.frame\"                             #> [403] \"group_indices_.grouped_df\"                             #> [404] \"group_indices_.rowwise_df\"                             #> [405] \"group_intersect\"                                       #> [406] \"group_keys\"                                            #> [407] \"group_keys.data.frame\"                                 #> [408] \"group_keys0\"                                           #> [409] \"group_labels_details\"                                  #> [410] \"group_map\"                                             #> [411] \"group_map.data.frame\"                                  #> [412] \"group_modify\"                                          #> [413] \"group_modify.data.frame\"                               #> [414] \"group_modify.grouped_df\"                               #> [415] \"group_nest\"                                            #> [416] \"group_nest.data.frame\"                                 #> [417] \"group_nest.grouped_df\"                                 #> [418] \"group_nest_impl\"                                       #> [419] \"group_rows\"                                            #> [420] \"group_size\"                                            #> [421] \"group_size.data.frame\"                                 #> [422] \"group_split\"                                           #> [423] \"group_split.data.frame\"                                #> [424] \"group_split.grouped_df\"                                #> [425] \"group_split.rowwise_df\"                                #> [426] \"group_split_impl\"                                      #> [427] \"group_sum\"                                             #> [428] \"group_trim\"                                            #> [429] \"group_trim.data.frame\"                                 #> [430] \"group_trim.grouped_df\"                                 #> [431] \"group_vars\"                                            #> [432] \"group_vars.data.frame\"                                 #> [433] \"group_walk\"                                            #> [434] \"grouped_df\"                                            #> [435] \"groups\"                                                #> [436] \"groups.data.frame\"                                     #> [437] \"has_active_group_context\"                              #> [438] \"has_minimum_stringi\"                                   #> [439] \"help_topic\"                                            #> [440] \"id\"                                                    #> [441] \"ident\"                                                 #> [442] \"if_across\"                                             #> [443] \"if_all\"                                                #> [444] \"if_any\"                                                #> [445] \"if_else\"                                               #> [446] \"imap\"                                                  #> [447] \"import_from\"                                           #> [448] \"import_vctrs\"                                          #> [449] \"inner_join\"                                            #> [450] \"inner_join.data.frame\"                                 #> [451] \"intersect.data.frame\"                                  #> [452] \"is.grouped_df\"                                         #> [453] \"is.src\"                                                #> [454] \"is.tbl\"                                                #> [455] \"is_compatible\"                                         #> [456] \"is_cross_by\"                                           #> [457] \"is_data_pronoun\"                                       #> [458] \"is_direct\"                                             #> [459] \"is_fun_list\"                                           #> [460] \"is_grouped_df\"                                         #> [461] \"is_inlinable_formula\"                                  #> [462] \"is_inlinable_function\"                                 #> [463] \"is_inlinable_lambda\"                                   #> [464] \"is_rowwise_df\"                                         #> [465] \"is_sel_vars\"                                           #> [466] \"is_slice_call\"                                         #> [467] \"is_symbol_or_string\"                                   #> [468] \"is_syntactic\"                                          #> [469] \"join_by\"                                               #> [470] \"join_by_common\"                                        #> [471] \"join_cast_common\"                                      #> [472] \"join_cols\"                                             #> [473] \"join_filter\"                                           #> [474] \"join_mutate\"                                           #> [475] \"join_rows\"                                             #> [476] \"keep\"                                                  #> [477] \"label_output_dataframe\"                                #> [478] \"label_output_list\"                                     #> [479] \"lag\"                                                   #> [480] \"last\"                                                  #> [481] \"last_dplyr_warnings\"                                   #> [482] \"lazy_deprec\"                                           #> [483] \"lead\"                                                  #> [484] \"left_join\"                                             #> [485] \"left_join.data.frame\"                                  #> [486] \"list_flatten\"                                          #> [487] \"local_column\"                                          #> [488] \"local_error_context\"                                   #> [489] \"local_mask\"                                            #> [490] \"locale_to_chr_proxy_collate\"                           #> [491] \"location\"                                              #> [492] \"make_syntactic\"                                        #> [493] \"make_tbl\"                                              #> [494] \"manip_all\"                                             #> [495] \"manip_apply_syms\"                                      #> [496] \"manip_at\"                                              #> [497] \"manip_if\"                                              #> [498] \"map\"                                                   #> [499] \"map2\"                                                  #> [500] \"map2_chr\"                                              #> [501] \"map2_dbl\"                                              #> [502] \"map2_int\"                                              #> [503] \"map2_lgl\"                                              #> [504] \"map_chr\"                                               #> [505] \"map_dbl\"                                               #> [506] \"map_if\"                                                #> [507] \"map_int\"                                               #> [508] \"map_lgl\"                                               #> [509] \"mask_type\"                                             #> [510] \"maybe_restart\"                                         #> [511] \"methods_generic\"                                       #> [512] \"methods_rd\"                                            #> [513] \"min_rank\"                                              #> [514] \"minimal_names\"                                         #> [515] \"mutate\"                                                #> [516] \"mutate.data.frame\"                                     #> [517] \"mutate_\"                                               #> [518] \"mutate_.data.frame\"                                    #> [519] \"mutate_.tbl_df\"                                        #> [520] \"mutate_all\"                                            #> [521] \"mutate_at\"                                             #> [522] \"mutate_bullets\"                                        #> [523] \"mutate_bullets.dplyr:::error_incompatible_combine\"     #> [524] \"mutate_bullets.dplyr:::mutate_constant_recycle_error\"  #> [525] \"mutate_bullets.dplyr:::mutate_incompatible_size\"       #> [526] \"mutate_bullets.dplyr:::mutate_mixed_null\"              #> [527] \"mutate_bullets.dplyr:::mutate_not_vector\"              #> [528] \"mutate_col\"                                            #> [529] \"mutate_cols\"                                           #> [530] \"mutate_each\"                                           #> [531] \"mutate_each_\"                                          #> [532] \"mutate_each_impl\"                                      #> [533] \"mutate_if\"                                             #> [534] \"mutate_keep\"                                           #> [535] \"mutate_relocate\"                                       #> [536] \"n\"                                                     #> [537] \"n_distinct\"                                            #> [538] \"n_groups\"                                              #> [539] \"n_groups.data.frame\"                                   #> [540] \"n_name\"                                                #> [541] \"na_if\"                                                 #> [542] \"named_args\"                                            #> [543] \"names<-.grouped_df\"                                    #> [544] \"names<-.rowwise_df\"                                    #> [545] \"names_as_error_names\"                                  #> [546] \"near\"                                                  #> [547] \"negate\"                                                #> [548] \"nest_by\"                                               #> [549] \"nest_by.data.frame\"                                    #> [550] \"nest_by.grouped_df\"                                    #> [551] \"nest_join\"                                             #> [552] \"nest_join.data.frame\"                                  #> [553] \"new_by\"                                                #> [554] \"new_dplyr_quosure\"                                     #> [555] \"new_dplyr_warning\"                                     #> [556] \"new_error_context\"                                     #> [557] \"new_expanded_quosures\"                                 #> [558] \"new_funs\"                                              #> [559] \"new_grouped_df\"                                        #> [560] \"new_join_by\"                                           #> [561] \"new_rowwise_df\"                                        #> [562] \"new_sel_vars\"                                          #> [563] \"node_walk_replace\"                                     #> [564] \"now\"                                                   #> [565] \"ntext\"                                                 #> [566] \"nth\"                                                   #> [567] \"ntile\"                                                 #> [568] \"obj_type_friendly\"                                     #> [569] \"obj_type_oo\"                                           #> [570] \"or_1\"                                                  #> [571] \"order_by\"                                              #> [572] \"oxford_comma\"                                          #> [573] \"parse_join_by_between\"                                 #> [574] \"parse_join_by_binary\"                                  #> [575] \"parse_join_by_closest\"                                 #> [576] \"parse_join_by_dollar\"                                  #> [577] \"parse_join_by_expr\"                                    #> [578] \"parse_join_by_name\"                                    #> [579] \"parse_join_by_overlaps\"                                #> [580] \"parse_join_by_within\"                                  #> [581] \"paste_line\"                                            #> [582] \"peek_column\"                                           #> [583] \"peek_error_context\"                                    #> [584] \"peek_mask\"                                             #> [585] \"percent_rank\"                                          #> [586] \"pick\"                                                  #> [587] \"pmap\"                                                  #> [588] \"poke_error_context\"                                    #> [589] \"print.all_vars\"                                        #> [590] \"print.any_vars\"                                        #> [591] \"print.dplyr_join_by\"                                   #> [592] \"print.dplyr_sel_vars\"                                  #> [593] \"print.fun_list\"                                        #> [594] \"print.last_dplyr_warnings\"                             #> [595] \"print.src\"                                             #> [596] \"progress_estimated\"                                    #> [597] \"pull\"                                                  #> [598] \"pull.data.frame\"                                       #> [599] \"push_dplyr_warnings\"                                   #> [600] \"quo_as_function\"                                       #> [601] \"quo_as_label\"                                          #> [602] \"quo_eval_fns\"                                          #> [603] \"quo_is_variable_reference\"                             #> [604] \"quo_reduce\"                                            #> [605] \"quo_set_env_to_data_mask_top\"                          #> [606] \"random_table_name\"                                     #> [607] \"rbind.grouped_df\"                                      #> [608] \"re_match\"                                              #> [609] \"recode\"                                                #> [610] \"recode.character\"                                      #> [611] \"recode.factor\"                                         #> [612] \"recode.numeric\"                                        #> [613] \"recode_default\"                                        #> [614] \"recode_default.default\"                                #> [615] \"recode_default.factor\"                                 #> [616] \"recode_factor\"                                         #> [617] \"reduce\"                                                #> [618] \"reduce_right\"                                          #> [619] \"reframe\"                                               #> [620] \"reframe.data.frame\"                                    #> [621] \"relocate\"                                              #> [622] \"relocate.data.frame\"                                   #> [623] \"rename\"                                                #> [624] \"rename.data.frame\"                                     #> [625] \"rename_\"                                               #> [626] \"rename_.data.frame\"                                    #> [627] \"rename_.grouped_df\"                                    #> [628] \"rename_all\"                                            #> [629] \"rename_at\"                                             #> [630] \"rename_if\"                                             #> [631] \"rename_vars\"                                           #> [632] \"rename_vars_\"                                          #> [633] \"rename_with\"                                           #> [634] \"rename_with.data.frame\"                                #> [635] \"replace_with\"                                          #> [636] \"reset_dplyr_warnings\"                                  #> [637] \"rethrow_error_join_incompatible_type\"                  #> [638] \"rethrow_error_join_matches_incomplete\"                 #> [639] \"rethrow_error_join_matches_multiple\"                   #> [640] \"rethrow_error_join_matches_nothing\"                    #> [641] \"rethrow_error_join_matches_remaining\"                  #> [642] \"rethrow_error_join_relationship_many_to_one\"           #> [643] \"rethrow_error_join_relationship_one_to_many\"           #> [644] \"rethrow_error_join_relationship_one_to_one\"            #> [645] \"rethrow_warning_join_matches_multiple\"                 #> [646] \"rethrow_warning_join_relationship_many_to_many\"        #> [647] \"right_join\"                                            #> [648] \"right_join.data.frame\"                                 #> [649] \"row_number\"                                            #> [650] \"rows_append\"                                           #> [651] \"rows_append.data.frame\"                                #> [652] \"rows_bind\"                                             #> [653] \"rows_cast_y\"                                           #> [654] \"rows_check_by\"                                         #> [655] \"rows_check_conflict\"                                   #> [656] \"rows_check_contains_by\"                                #> [657] \"rows_check_unique\"                                     #> [658] \"rows_check_unmatched\"                                  #> [659] \"rows_check_x_contains_y\"                               #> [660] \"rows_check_y_conflict\"                                 #> [661] \"rows_check_y_unmatched\"                                #> [662] \"rows_delete\"                                           #> [663] \"rows_delete.data.frame\"                                #> [664] \"rows_df_in_place\"                                      #> [665] \"rows_insert\"                                           #> [666] \"rows_insert.data.frame\"                                #> [667] \"rows_patch\"                                            #> [668] \"rows_patch.data.frame\"                                 #> [669] \"rows_update\"                                           #> [670] \"rows_update.data.frame\"                                #> [671] \"rows_upsert\"                                           #> [672] \"rows_upsert.data.frame\"                                #> [673] \"rowwise\"                                               #> [674] \"rowwise.data.frame\"                                    #> [675] \"rowwise.grouped_df\"                                    #> [676] \"rowwise_df\"                                            #> [677] \"rule\"                                                  #> [678] \"same_src\"                                              #> [679] \"same_src.data.frame\"                                   #> [680] \"sample_frac\"                                           #> [681] \"sample_frac.data.frame\"                                #> [682] \"sample_frac.default\"                                   #> [683] \"sample_int\"                                            #> [684] \"sample_n\"                                              #> [685] \"sample_n.data.frame\"                                   #> [686] \"sample_n.default\"                                      #> [687] \"select\"                                                #> [688] \"select.data.frame\"                                     #> [689] \"select.list\"                                           #> [690] \"select_\"                                               #> [691] \"select_.data.frame\"                                    #> [692] \"select_.grouped_df\"                                    #> [693] \"select_all\"                                            #> [694] \"select_at\"                                             #> [695] \"select_if\"                                             #> [696] \"select_var\"                                            #> [697] \"select_vars\"                                           #> [698] \"select_vars_\"                                          #> [699] \"semi_join\"                                             #> [700] \"semi_join.data.frame\"                                  #> [701] \"set_minimal_names\"                                     #> [702] \"set_unique_names\"                                      #> [703] \"set_universal_names\"                                   #> [704] \"setdiff.data.frame\"                                    #> [705] \"setequal.data.frame\"                                   #> [706] \"shift\"                                                 #> [707] \"shift_c\"                                               #> [708] \"shift_slice\"                                           #> [709] \"show_query\"                                            #> [710] \"show_regroups\"                                         #> [711] \"show_time\"                                             #> [712] \"signal_warnings\"                                       #> [713] \"skip_internal_condition\"                               #> [714] \"slice\"                                                 #> [715] \"slice.data.frame\"                                      #> [716] \"slice_\"                                                #> [717] \"slice_.data.frame\"                                     #> [718] \"slice_.tbl_df\"                                         #> [719] \"slice_combine\"                                         #> [720] \"slice_eval\"                                            #> [721] \"slice_head\"                                            #> [722] \"slice_head.data.frame\"                                 #> [723] \"slice_max\"                                             #> [724] \"slice_max.data.frame\"                                  #> [725] \"slice_min\"                                             #> [726] \"slice_min.data.frame\"                                  #> [727] \"slice_rank_idx\"                                        #> [728] \"slice_rows\"                                            #> [729] \"slice_sample\"                                          #> [730] \"slice_sample.data.frame\"                               #> [731] \"slice_tail\"                                            #> [732] \"slice_tail.data.frame\"                                 #> [733] \"some\"                                                  #> [734] \"sort_key_generator\"                                    #> [735] \"sql\"                                                   #> [736] \"sql_escape_ident\"                                      #> [737] \"sql_escape_string\"                                     #> [738] \"sql_join\"                                              #> [739] \"sql_select\"                                            #> [740] \"sql_semi_join\"                                         #> [741] \"sql_set_op\"                                            #> [742] \"sql_subquery\"                                          #> [743] \"sql_translate_env\"                                     #> [744] \"src\"                                                   #> [745] \"src_df\"                                                #> [746] \"src_local\"                                             #> [747] \"src_mysql\"                                             #> [748] \"src_postgres\"                                          #> [749] \"src_sqlite\"                                            #> [750] \"src_tbls\"                                              #> [751] \"src_tbls.src_local\"                                    #> [752] \"standardise_join_incomplete\"                           #> [753] \"standardise_join_no_match\"                             #> [754] \"standardise_join_remaining\"                            #> [755] \"standardise_join_suffix\"                               #> [756] \"stop_dplyr\"                                            #> [757] \"stop_input_type\"                                       #> [758] \"stop_invalid_dollar_sign\"                              #> [759] \"stop_invalid_top_expression\"                           #> [760] \"stop_join\"                                             #> [761] \"stop_join_by_closest_equal_expression\"                 #> [762] \"stop_join_by_closest_invalid_expression\"               #> [763] \"stop_join_matches_multiple\"                            #> [764] \"stop_mask_type\"                                        #> [765] \"stop_pick_empty\"                                       #> [766] \"str_rep\"                                               #> [767] \"strip_pos\"                                             #> [768] \"summarise\"                                             #> [769] \"summarise.data.frame\"                                  #> [770] \"summarise.grouped_df\"                                  #> [771] \"summarise.rowwise_df\"                                  #> [772] \"summarise_\"                                            #> [773] \"summarise_.data.frame\"                                 #> [774] \"summarise_.tbl_df\"                                     #> [775] \"summarise_all\"                                         #> [776] \"summarise_at\"                                          #> [777] \"summarise_build\"                                       #> [778] \"summarise_bullets\"                                     #> [779] \"summarise_bullets.dplyr:::summarise_incompatible_size\" #> [780] \"summarise_bullets.dplyr:::summarise_mixed_null\"        #> [781] \"summarise_bullets.dplyr:::summarise_unsupported_type\"  #> [782] \"summarise_cols\"                                        #> [783] \"summarise_deprecate_variable_size\"                     #> [784] \"summarise_each\"                                        #> [785] \"summarise_each_\"                                       #> [786] \"summarise_each_impl\"                                   #> [787] \"summarise_eval_one\"                                    #> [788] \"summarise_if\"                                          #> [789] \"summarise_inform\"                                      #> [790] \"summarise_verbose\"                                     #> [791] \"summarize\"                                             #> [792] \"summarize_\"                                            #> [793] \"summarize_all\"                                         #> [794] \"summarize_at\"                                          #> [795] \"summarize_each\"                                        #> [796] \"summarize_each_\"                                       #> [797] \"summarize_if\"                                          #> [798] \"symdiff\"                                               #> [799] \"symdiff.data.frame\"                                    #> [800] \"symdiff.default\"                                       #> [801] \"tally\"                                                 #> [802] \"tally.data.frame\"                                      #> [803] \"tally_\"                                                #> [804] \"tally_n\"                                               #> [805] \"tbl\"                                                   #> [806] \"tbl.DBIConnection\"                                     #> [807] \"tbl.src_local\"                                         #> [808] \"tbl_at_syms\"                                           #> [809] \"tbl_at_vars\"                                           #> [810] \"tbl_df\"                                                #> [811] \"tbl_if_syms\"                                           #> [812] \"tbl_if_vars\"                                           #> [813] \"tbl_nongroup_vars\"                                     #> [814] \"tbl_ptype\"                                             #> [815] \"tbl_ptype.default\"                                     #> [816] \"tbl_sum.grouped_df\"                                    #> [817] \"tbl_sum.rowwise_df\"                                    #> [818] \"tbl_vars\"                                              #> [819] \"tbl_vars.data.frame\"                                   #> [820] \"tbl_vars_dispatch\"                                     #> [821] \"the\"                                                   #> [822] \"tick\"                                                  #> [823] \"tick_if_needed\"                                        #> [824] \"top_frac\"                                              #> [825] \"top_n\"                                                 #> [826] \"top_n_rank\"                                            #> [827] \"topic_links\"                                           #> [828] \"transmute\"                                             #> [829] \"transmute.data.frame\"                                  #> [830] \"transmute_\"                                            #> [831] \"transmute_.data.frame\"                                 #> [832] \"transmute_all\"                                         #> [833] \"transmute_at\"                                          #> [834] \"transmute_if\"                                          #> [835] \"transpose\"                                             #> [836] \"ungroup\"                                               #> [837] \"ungroup.data.frame\"                                    #> [838] \"ungroup.grouped_df\"                                    #> [839] \"ungroup.rowwise_df\"                                    #> [840] \"uninline\"                                              #> [841] \"union.data.frame\"                                      #> [842] \"union_all\"                                             #> [843] \"union_all.data.frame\"                                  #> [844] \"union_all.default\"                                     #> [845] \"unique_names\"                                          #> [846] \"universal_names\"                                       #> [847] \"unstructure\"                                           #> [848] \"validate_and_split_formula\"                            #> [849] \"validate_grouped_df\"                                   #> [850] \"validate_recode_default\"                               #> [851] \"validate_rowwise_df\"                                   #> [852] \"vars\"                                                  #> [853] \"vars_select_syms\"                                      #> [854] \"vec_as_location_invert\"                                #> [855] \"vec_case_match\"                                        #> [856] \"vec_case_when\"                                         #> [857] \"vec_order_radix\"                                       #> [858] \"vec_paste0\"                                            #> [859] \"vec_slice2\"                                            #> [860] \"vec_type_friendly\"                                     #> [861] \"walk\"                                                  #> [862] \"warn_dplyr\"                                            #> [863] \"warn_filter_across\"                                    #> [864] \"warn_filter_data_frame\"                                #> [865] \"warn_filter_one_column_matrix\"                         #> [866] \"warn_join\"                                             #> [867] \"warn_join_cross_by\"                                    #> [868] \"warn_join_multiple\"                                    #> [869] \"warn_join_multiple_null\"                               #> [870] \"warn_text_se\"                                          #> [871] \"warn_underscored\"                                      #> [872] \"with_groups\"                                           #> [873] \"with_no_rlang_infix_labeling\"                          #> [874] \"with_order\"                                            #> [875] \"wrap\"                                                  #> [876] \"wrap_dbplyr_obj\""},{"path":"https://yogat3ch.github.io/UU/reference/ginfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom info message — ginfo","title":"Custom info message — ginfo","text":"Provide info inform","code":""},{"path":"https://yogat3ch.github.io/UU/reference/ginfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom info message — ginfo","text":"","code":"ginfo(   message = NULL,   body = NULL,   footer = NULL,   .frequency = c(\"always\", \"regularly\", \"once\"),   e = rlang::caller_env() )"},{"path":"https://yogat3ch.github.io/UU/reference/ginfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom info message — ginfo","text":"message (chr) message display, formatted bulleted list. first element displayed alert bullet prefixed ! default. Elements named \"*\", \"\", \"x\" formatted regular, info, cross bullets respectively. See topic-condition-formatting bulleted messaging. body, footer Additional bullets. .frequency frequently warning message displayed? default (\"always\") displayed time. \"regularly\", displayed every 8 hours. \"\", displayed per session. e (environment) calling environment. Passed glue making message","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/glue_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","title":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","text":"Create JS string glue insertions glue .open = !@ & .close = @#","code":""},{"path":"https://yogat3ch.github.io/UU/reference/glue_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","text":"","code":"glue_js(   js,   as_chr = FALSE,   e = rlang::caller_env(),   .open = \"*{\",   .close = \"}*\" )"},{"path":"https://yogat3ch.github.io/UU/reference/glue_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","text":"js chr JS code glue as_chr lgl Whether use as_js output FALSE .character TRUE. Default FALSE e env calling environment","code":""},{"path":"https://yogat3ch.github.io/UU/reference/glue_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/glue_js.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a JS string with glue insertions\nglue .open = !@ & .close = @# — glue_js","text":"","code":"glue_js(\"$(document).ready(() => {let x = *{tolower(FALSE)}*)\") #> $(document).ready(() => {let x = false)"},{"path":"https://yogat3ch.github.io/UU/reference/gmsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom message\nMessage using format_message & cat_line — gmsg","title":"Custom message\nMessage using format_message & cat_line — gmsg","text":"Custom message Message using format_message & cat_line","code":""},{"path":"https://yogat3ch.github.io/UU/reference/gmsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom message\nMessage using format_message & cat_line — gmsg","text":"","code":"gmsg(msg, e = rlang::caller_env())"},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/grapes-allin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Are all lhs values in rhs? — %allin%","title":"Are all lhs values in rhs? — %allin%","text":"lhs values rhs?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-allin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are all lhs values in rhs? — %allin%","text":"","code":"lhs %allin% rhs"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-allin-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are all lhs values in rhs? — %allin%","text":"","code":"2:5 %allin% 1:10 #> [1] TRUE 5:11 %allin% 1:10 #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-nin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Are lhs values absent from set on rhs? — %nin%","title":"Are lhs values absent from set on rhs? — %nin%","text":"lhs values absent set rhs?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-nin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are lhs values absent from set on rhs? — %nin%","text":"","code":"... %nin% NA"},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/grapes-nin-grapes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Are lhs values absent from set on rhs? — %nin%","text":"Think.fr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-nin-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are lhs values absent from set on rhs? — %nin%","text":"","code":"1 %nin% 1:10 #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-0-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a 0 length value — %|0|%","title":"Replace a 0 length value — %|0|%","text":"lhs length 0, replace rhs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-0-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a 0 length value — %|0|%","text":"","code":"lhs %|0|% rhs"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-0-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a 0 length value — %|0|%","text":"lhs (expression) try rhs (expression) replace expression fails","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-0-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a 0 length value — %|0|%","text":"results lhs length > 1 otherwise rhs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-legit-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"If legit lhs, else rhs — %|legit|%","title":"If legit lhs, else rhs — %|legit|%","text":"legit lhs, else rhs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-legit-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If legit lhs, else rhs — %|legit|%","text":"","code":"lhs %|legit|% rhs"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-legit-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If legit lhs, else rhs — %|legit|%","text":"lhs (expression) try rhs (expression) replace expression fails","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-legit-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If legit lhs, else rhs — %|legit|%","text":"legit lhs else rhs","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-legit-or-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"If legit lhs, else rhs — %|legit|%","text":"","code":"(100 / NA) %|legit|% 4 #> [1] 4 list(a = 5)$a %|legit|% 4 #> [1] 5 list(a = 5)$b %|legit|% 4 #> [1] 4"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-try-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Try an expression — %|try|%","title":"Try an expression — %|try|%","text":"Calls expression (LHS) & fails return RHS","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-try-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try an expression — %|try|%","text":"","code":"lhs %|try|% rhs"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-try-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try an expression — %|try|%","text":"lhs (expression) try rhs (expression) replace expression fails","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-try-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try an expression — %|try|%","text":"results lhs success results rhs fail","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-zchar-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace zero-length character strings with right hand side — %|zchar|%","title":"Replace zero-length character strings with right hand side — %|zchar|%","text":"Replace zero-length character strings right hand side","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-zchar-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace zero-length character strings with right hand side — %|zchar|%","text":"","code":"lhs %|zchar|% rhs"},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-zchar-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace zero-length character strings with right hand side — %|zchar|%","text":"lhs chr rhs chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-zchar-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace zero-length character strings with right hand side — %|zchar|%","text":"chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/grapes-or-zchar-or-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace zero-length character strings with right hand side — %|zchar|%","text":"","code":"c(\"a\" , \"\", \"c\", \"\") %|zchar|% \"b\" #> [1] \"a\" \"b\" \"c\" \"b\""},{"path":"https://yogat3ch.github.io/UU/reference/gwarn.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom warning message — gwarn","title":"Custom warning message — gwarn","text":"Throw cli_alert_warning format_warning","code":""},{"path":"https://yogat3ch.github.io/UU/reference/gwarn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom warning message — gwarn","text":"","code":"gwarn(   message = NULL,   body = NULL,   footer = NULL,   .frequency = c(\"always\", \"regularly\", \"once\"),   e = rlang::caller_env() )"},{"path":"https://yogat3ch.github.io/UU/reference/gwarn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom warning message — gwarn","text":"message (chr) message display, formatted bulleted list. first element displayed alert bullet prefixed ! default. Elements named \"*\", \"\", \"x\" formatted regular, info, cross bullets respectively. See topic-condition-formatting bulleted messaging. body, footer Additional bullets. .frequency frequently warning message displayed? default (\"always\") displayed time. \"regularly\", displayed every 8 hours. \"\", displayed per session. e (environment) calling environment. Passed glue making message","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/if_debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Run expressions only when option use_debug = TRUE — if_debug","title":"Run expressions only when option use_debug = TRUE — if_debug","text":"Run expressions option use_debug = TRUE","code":""},{"path":"https://yogat3ch.github.io/UU/reference/if_debug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run expressions only when option use_debug = TRUE — if_debug","text":"","code":"if_debug(...)"},{"path":"https://yogat3ch.github.io/UU/reference/if_debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run expressions only when option use_debug = TRUE — if_debug","text":"... expr evaluate","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/ignore_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lines to .gitignore — ignore_files","title":"Add lines to .gitignore — ignore_files","text":"Add lines .gitignore","code":""},{"path":"https://yogat3ch.github.io/UU/reference/ignore_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lines to .gitignore — ignore_files","text":"","code":"ignore_files(lines, directory = \".\", ignore_file = \".gitignore\")"},{"path":"https://yogat3ch.github.io/UU/reference/ignore_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lines to .gitignore — ignore_files","text":"lines chr directory (chr) directory path ignore_file ignore_file chr filename holding ignores modified. Default .gitignore","code":""},{"path":"https://yogat3ch.github.io/UU/reference/ignore_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add lines to .gitignore — ignore_files","text":"informative messages","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/install_remote.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a package — install_remote","title":"Install a package — install_remote","text":"Install package","code":""},{"path":"https://yogat3ch.github.io/UU/reference/install_remote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a package — install_remote","text":"","code":"install_remote(pkg, remote, ..., to_desc = TRUE, snapshot = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/install_remote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a package — install_remote","text":"pkg chr package names Required remote chr github remote ... Arguments passed remotes::install_github repo Repository address format username/repo[/subdir][@ref|#pull|@*release]. Alternatively, can specify subdir /ref using respective parameters (see ); specified, values repo take precedence. ref Desired git reference. commit, tag, branch name, call github_pull() github_release(). Defaults \"HEAD\", means default branch GitHub git remotes. See setting--default-branch details. subdir Subdirectory within repo contains R package. auth_token install private repo, generate personal access token (PAT) least repo scope https://github.com/settings/tokens supply argument. safer using password can easily delete PAT without affecting others. Defaults GITHUB_PAT environment variable. host GitHub API host use. Override GitHub enterprise hostname, example, \"github.hostname.com/api/v3\". dependencies dependencies want check? Can character vector (selecting \"Depends\", \"Imports\", \"LinkingTo\", \"Suggests\", \"Enhances\"), logical vector. TRUE shorthand \"Depends\", \"Imports\", \"LinkingTo\" \"Suggests\". NA shorthand \"Depends\", \"Imports\" \"LinkingTo\" default. FALSE shorthand dependencies (.e. just check package, dependencies). value \"soft\" means TRUE, \"hard\" means NA. can also specify dependencies one additional fields, common ones include: Config/Needs/website - dependencies used building pkgdown site. Config/Needs/coverage dependencies used calculating test coverage. upgrade package dependencies upgraded? One \"default\", \"ask\", \"always\", \"never\". \"default\" respects value R_REMOTES_UPGRADE environment variable set, falls back \"ask\" unset. \"ask\" prompts user date packages upgrade. non-interactive sessions \"ask\" equivalent \"always\". TRUE FALSE also accepted correspond \"always\" \"never\" respectively. force Force installation, even remote state changed since previous install. quiet TRUE, suppress output. build TRUE build package installing. build_opts Options pass R CMD build, used build TRUE. build_manual FALSE, build PDF manual ('---manual'). build_vignettes FALSE, build package vignettes ('---build-vignettes'). repos character vector giving repositories use. type Type package update. to_desc lgl Add package dependency DESCRIPTION file? snapshot lgl Run renv::snapshot","code":""},{"path":"https://yogat3ch.github.io/UU/reference/install_remote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install a package — install_remote","text":"Installs package, add version DESCRIPTION file, snapshots package renv.lock file present.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple interpolate between two numbers — interpolate","title":"Simple interpolate between two numbers — interpolate","text":"Simple interpolate two numbers","code":""},{"path":"https://yogat3ch.github.io/UU/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple interpolate between two numbers — interpolate","text":"","code":"interpolate(start, end, n)"},{"path":"https://yogat3ch.github.io/UU/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple interpolate between two numbers — interpolate","text":"start num first number end num last number n int total numbers output vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple interpolate between two numbers — interpolate","text":"num vector length equivalent n","code":""},{"path":"https://yogat3ch.github.io/UU/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple interpolate between two numbers — interpolate","text":"","code":"interpolate(0, 6, 6) #> [1] 0.0 1.2 2.4 3.6 4.8 6.0"},{"path":"https://yogat3ch.github.io/UU/reference/is_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Is object an error — is_error","title":"Is object an error — is_error","text":"object error","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is object an error — is_error","text":"","code":"is_error(x)"},{"path":"https://yogat3ch.github.io/UU/reference/is_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is object an error — is_error","text":"x obj","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is object an error — is_error","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is object an error — is_error","text":"","code":"is_error(try(stop())) #> Error in try(stop()) :  #> [1] TRUE"},{"path":"https://yogat3ch.github.io/UU/reference/is_filepath.html","id":null,"dir":"Reference","previous_headings":"","what":"Is path a file path — is_filepath","title":"Is path a file path — is_filepath","text":"Given path, filepath?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_filepath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is path a file path — is_filepath","text":"","code":"is_filepath(path)"},{"path":"https://yogat3ch.github.io/UU/reference/is_filepath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is path a file path — is_filepath","text":"path (character) path","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_filepath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is path a file path — is_filepath","text":"(logical)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_legit.html","id":null,"dir":"Reference","previous_headings":"","what":"Is object legit? — is_legit","title":"Is object legit? — is_legit","text":"object non-null, non-empty, non-NA, try-error?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_legit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is object legit? — is_legit","text":"","code":"is_legit(x)"},{"path":"https://yogat3ch.github.io/UU/reference/is_legit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is object legit? — is_legit","text":"x (object)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_legit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is object legit? — is_legit","text":"(logical)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Is working directory a package? — is_package","title":"Is working directory a package? — is_package","text":"working directory package?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is working directory a package? — is_package","text":"","code":"is_package()"},{"path":"https://yogat3ch.github.io/UU/reference/is_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is working directory a package? — is_package","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is working directory a package? — is_package","text":"","code":"is_package() #> [1] \"/home/runner/work/UU/UU\""},{"path":"https://yogat3ch.github.io/UU/reference/is_package_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Is package in development or installed — is_package_dev","title":"Is package in development or installed — is_package_dev","text":"package development installed","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_package_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is package in development or installed — is_package_dev","text":"","code":"is_package_dev(pkg_nm = pkg_name())"},{"path":"https://yogat3ch.github.io/UU/reference/is_package_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is package in development or installed — is_package_dev","text":"pkg_nm chr name package","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_package_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is package in development or installed — is_package_dev","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Session in a Project? — is_project","title":"Is Session in a Project? — is_project","text":"Session Project?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/is_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Session in a Project? — is_project","text":"","code":"is_project()"},{"path":"https://yogat3ch.github.io/UU/reference/is_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Session in a Project? — is_project","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/is_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Session in a Project? — is_project","text":"","code":"is_project() #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/join_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect possible duplicates of rows or columns after a join — join_check","title":"Detect possible duplicates of rows or columns after a join — join_check","text":"Detect possible duplicates rows columns join","code":""},{"path":"https://yogat3ch.github.io/UU/reference/join_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect possible duplicates of rows or columns after a join — join_check","text":"","code":"join_check(after, before, halt_fn = rlang::warn)"},{"path":"https://yogat3ch.github.io/UU/reference/join_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect possible duplicates of rows or columns after a join — join_check","text":"(data.frame) join (data.frame) join Optional required row comparison. halt_fn (function) notify, default warn.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/join_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect possible duplicates of rows or columns after a join — join_check","text":"","code":"a = data.frame(a = c(1, 2, 3, 4, 3, 5), b = 1:6) b = data.frame(a = c(1, 2, 3, 4, 5), c = letters[1:5]) after <- dplyr::left_join(a, b) #> Joining with `by = join_by(a)` join_check(b, after, halt_fn = message) #> Possible join issues detected! #>  - Row count discrepancies: #> after - 6 #> b - 5"},{"path":"https://yogat3ch.github.io/UU/reference/key_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle different output type requests for match_df — key_out","title":"Handle different output type requests for match_df — key_out","text":"Handle different output type requests match_df","code":""},{"path":"https://yogat3ch.github.io/UU/reference/key_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle different output type requests for match_df — key_out","text":"","code":"key_out(x, keys, out)"},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_duplicated.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicates in key pairs — key_pairs_duplicated","title":"Find duplicates in key pairs — key_pairs_duplicated","text":"Find duplicates key pairs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_duplicated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicates in key pairs — key_pairs_duplicated","text":"","code":"key_pairs_duplicated(Sys.getenv())"},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_duplicated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicates in key pairs — key_pairs_duplicated","text":"x chr/Dlist Either character strings keypairs Dlist returned Sys.getenv","code":""},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_duplicated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicates in key pairs — key_pairs_duplicated","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Make key-pairs from a named character vector — key_pairs_text","title":"Make key-pairs from a named character vector — key_pairs_text","text":"Make key-pairs named character vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make key-pairs from a named character vector — key_pairs_text","text":"","code":"key_pairs_text(Sys.getenv())"},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make key-pairs from a named character vector — key_pairs_text","text":"x chr named","code":""},{"path":"https://yogat3ch.github.io/UU/reference/key_pairs_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make key-pairs from a named character vector — key_pairs_text","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/larger.html","id":null,"dir":"Reference","previous_headings":"","what":"Which is larger — larger","title":"Which is larger — larger","text":"larger","code":""},{"path":"https://yogat3ch.github.io/UU/reference/larger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which is larger — larger","text":"","code":"larger(x, y, compare_length = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/larger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which is larger — larger","text":"x num/obj y num/obj compare_length lgl whether lengths rather values compared","code":""},{"path":"https://yogat3ch.github.io/UU/reference/larger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which is larger — larger","text":"num index larger, 0 equal","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/larger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which is larger — larger","text":"","code":"larger(1,2) #> [1] 0 larger(1,2, compare_length = FALSE) #> [1] 2 larger(letters[1:3],letters[1:2]) #> [1] 1"},{"path":"https://yogat3ch.github.io/UU/reference/last_updated.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather last updated times for on-disk files — last_updated","title":"Gather last updated times for on-disk files — last_updated","text":"Check last modified time files paths","code":""},{"path":"https://yogat3ch.github.io/UU/reference/last_updated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather last updated times for on-disk files — last_updated","text":"","code":"last_updated(x, path = FALSE, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/last_updated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather last updated times for on-disk files — last_updated","text":"x (chr) file path check last updated time path (lgl) whether x path files checked ... Arguments passed base::list.files pattern optional regular expression.  file names     match regular expression returned. .files logical value.  FALSE,     names visible files returned (following Unix-style visibility,     files whose name start dot).  TRUE,     file names returned. full.names logical value.  TRUE, directory     path prepended file names give relative file path.     FALSE, file names (rather paths) returned. recursive logical.  listing recurse directories? ignore.case logical.  pattern-matching case-insensitive? include.dirs logical.  subdirectory names included     recursive listings?  (always non-recursive ones). .. logical.  \".\" \"..\" excluded     also non-recursive listings?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/last_updated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather last updated times for on-disk files — last_updated","text":"(POSIXct) Last modified time","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/len_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"The length of unique values in a vector — len_unique","title":"The length of unique values in a vector — len_unique","text":"length unique values vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/len_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The length of unique values in a vector — len_unique","text":"","code":"len_unique(x)"},{"path":"https://yogat3ch.github.io/UU/reference/len_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The length of unique values in a vector — len_unique","text":"x vctr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/len_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The length of unique values in a vector — len_unique","text":"dbl","code":""},{"path":"https://yogat3ch.github.io/UU/reference/len_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The length of unique values in a vector — len_unique","text":"","code":"len_unique(c(1,2,1)) #> [1] 2"},{"path":"https://yogat3ch.github.io/UU/reference/list.files2.html","id":null,"dir":"Reference","previous_headings":"","what":"List full file paths with the file name as the name — list.files2","title":"List full file paths with the file name as the name — list.files2","text":"List full file paths file name name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/list.files2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List full file paths with the file name as the name — list.files2","text":"","code":"list.files2(path = \".\", full.names = TRUE, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/list.files2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List full file paths with the file name as the name — list.files2","text":"path (character) dir path files full.names logical value.  TRUE, directory     path prepended file names give relative file path.     FALSE, file names (rather paths) returned. ... Arguments passed base::list.files pattern optional regular expression.  file names     match regular expression returned. .files logical value.  FALSE,     names visible files returned (following Unix-style visibility,     files whose name start dot).  TRUE,     file names returned. recursive logical.  listing recurse directories? ignore.case logical.  pattern-matching case-insensitive? include.dirs logical.  subdirectory names included     recursive listings?  (always non-recursive ones). .. logical.  \".\" \"..\" excluded     also non-recursive listings?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/list.files2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List full file paths with the file name as the name — list.files2","text":"(named character)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/list.files2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List full file paths with the file name as the name — list.files2","text":"","code":"list.files2(\"~\") #>                factory                perflog                runners  #> \"/home/runner/factory\" \"/home/runner/perflog\" \"/home/runner/runners\"  #>                 warmup                   work  #>  \"/home/runner/warmup\"    \"/home/runner/work\""},{"path":"https://yogat3ch.github.io/UU/reference/list_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a list — list_rename","title":"Rename a list — list_rename","text":"krassowski link","code":""},{"path":"https://yogat3ch.github.io/UU/reference/list_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a list — list_rename","text":"","code":"list_rename(.data, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/list_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a list — list_rename","text":".data list renamed ... named arguments form new_name = old_name (unquoted)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/list_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a list — list_rename","text":"list","code":""},{"path":"https://yogat3ch.github.io/UU/reference/list_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a list — list_rename","text":"","code":"my_list = list(a=1, b=2, c=3) list_rename(my_list, x=a, y=b) #> $x #> [1] 1 #>  #> $y #> [1] 2 #>  #> $c #> [1] 3 #>"},{"path":"https://yogat3ch.github.io/UU/reference/luminance_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter colors based on a luminance threshold — luminance_filter","title":"Filter colors based on a luminance threshold — luminance_filter","text":"Filter colors based luminance threshold","code":""},{"path":"https://yogat3ch.github.io/UU/reference/luminance_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter colors based on a luminance threshold — luminance_filter","text":"","code":"luminance_filter(colors, dark_mode, luminance_threshold = 0.5)"},{"path":"https://yogat3ch.github.io/UU/reference/luminance_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter colors based on a luminance threshold — luminance_filter","text":"colors chr color vector dark_mode lgl colors >= TRUE, otherwise <= FALSE luminance_threshold lgl 0-1 luminance threshold filter","code":""},{"path":"https://yogat3ch.github.io/UU/reference/luminance_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter colors based on a luminance threshold — luminance_filter","text":"chr vector colors","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/luminance_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter colors based on a luminance threshold — luminance_filter","text":"","code":"x <- tibble::tribble( ~CSS.Name, ~Hex.Code, ~Decimal.Code, \"Black\",        \"#000000\",            \"(0,0,0)\", \"White\",        \"#FFFFFF\",      \"(255,255,255)\", \"Red\",        \"#FF0000\",          \"(255,0,0)\", \"Lime\",        \"#00FF00\",          \"(0,255,0)\", \"Blue\",        \"#0000FF\",          \"(0,0,255)\", \"Yellow\",        \"#FFFF00\",        \"(255,255,0)\", \"Cyan / Aqua\",        \"#00FFFF\",        \"(0,255,255)\", \"Magenta / Fuchsia\",        \"#FF00FF\",        \"(255,0,255)\", \"Silver\",        \"#C0C0C0\",      \"(192,192,192)\", \"Gray\",        \"#808080\",      \"(128,128,128)\", \"Maroon\",        \"#800000\",          \"(128,0,0)\", \"Olive\",        \"#808000\",        \"(128,128,0)\", \"Green\",        \"#008000\",          \"(0,128,0)\", \"Purple\",        \"#800080\",        \"(128,0,128)\", \"Teal\",        \"#008080\",        \"(0,128,128)\", \"Navy\",        \"#000080\",          \"(0,0,128)\" ) luminance_filter(x$Hex.Code, TRUE) #> [1] \"#FFFFFF\" \"#00FF00\" \"#FFFF00\" \"#00FFFF\" \"#C0C0C0\" luminance_filter(x$Hex.Code, FALSE) #>  [1] \"#000000\" \"#FF0000\" \"#0000FF\" \"#FF00FF\" \"#808080\" \"#800000\" \"#808000\" #>  [8] \"#008000\" \"#800080\" \"#008080\" \"#000080\""},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the order of magnitude — magnitude_order","title":"Compute the order of magnitude — magnitude_order","text":"Uses floor round","code":""},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the order of magnitude — magnitude_order","text":"","code":"magnitude_order(x)"},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the order of magnitude — magnitude_order","text":"x num","code":""},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the order of magnitude — magnitude_order","text":"num","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the order of magnitude — magnitude_order","text":"","code":"magnitude_order(10^(1:10)) #>  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_triplet.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","title":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","text":"Compute order magnitude triplet ie thousand, million, trillion","code":""},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_triplet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","text":"","code":"magnitude_triplet(x)"},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_triplet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","text":"x num","code":""},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_triplet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","text":"num","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/magnitude_triplet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the order of magnitude triplet ie thousand, million, trillion — magnitude_triplet","text":"","code":"magnitude_triplet(10^(1:10)) #>  [1] 0 0 1 1 1 2 2 2 3 3"},{"path":"https://yogat3ch.github.io/UU/reference/make_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a file path name with underscores — make_names","title":"Make a file path name with underscores — make_names","text":"Make file path name underscores","code":""},{"path":"https://yogat3ch.github.io/UU/reference/make_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a file path name with underscores — make_names","text":"","code":"make_names(x)"},{"path":"https://yogat3ch.github.io/UU/reference/make_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a file path name with underscores — make_names","text":"(character) file path","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/map_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Match the classes of one object to that of another object — map_class","title":"Match the classes of one object to that of another object — map_class","text":"Match classes one object another object","code":""},{"path":"https://yogat3ch.github.io/UU/reference/map_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match the classes of one object to that of another object — map_class","text":"","code":"map_class(x, y)"},{"path":"https://yogat3ch.github.io/UU/reference/map_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match the classes of one object to that of another object — map_class","text":"x (object) object matched y (object) object coerced","code":""},{"path":"https://yogat3ch.github.io/UU/reference/map_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match the classes of one object to that of another object — map_class","text":"y class types matching x","code":""},{"path":"https://yogat3ch.github.io/UU/reference/match_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract matching rows of a data frame. — match_df","title":"Extract matching rows of a data frame. — match_df","text":"Match works way join, instead return combined dataset, returns matching rows first dataset. particularly useful summarised data way want subset original data characteristic subset.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/match_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract matching rows of a data frame. — match_df","text":"","code":"match_df(x, y, out = NULL, on = NULL, verbose = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/match_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract matching rows of a data frame. — match_df","text":"x data frame subset. y data frame defining matching rows. obj class matching desired output. Default NULL returns data.frame matching row y. numeric() return matching index y & logical() return matching logical index variables match - default use variables common data frames.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/match_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract matching rows of a data frame. — match_df","text":"tbl/dbl/lgl Depending ","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/match_letters.html","id":null,"dir":"Reference","previous_headings":"","what":"Match the first n letters to supplied arguments — match_letters","title":"Match the first n letters to supplied arguments — match_letters","text":"Case insensitive matching argument possibilities provided ellipsis.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/match_letters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match the first n letters to supplied arguments — match_letters","text":"","code":"match_letters(   x,   ...,   n = 1,   multiple = FALSE,   ignore.case = FALSE,   capitalize = FALSE )"},{"path":"https://yogat3ch.github.io/UU/reference/match_letters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match the first n letters to supplied arguments — match_letters","text":"x (character) match ... (character) vectors match n (numeric) many characters x use matching. Set NULL use multiple (logical) multiple matches allowed? FALSE (Default) first match returned. ignore.case FALSE, pattern matching case       sensitive TRUE, case ignored matching. capitalize (logical) whether capitalize result","code":""},{"path":"https://yogat3ch.github.io/UU/reference/match_letters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match the first n letters to supplied arguments — match_letters","text":"(character) vector matches","code":""},{"path":"https://yogat3ch.github.io/UU/reference/max2.html","id":null,"dir":"Reference","previous_headings":"","what":"An alternative to max that preserves names — max2","title":"An alternative to max that preserves names — max2","text":"alternative max preserves names","code":""},{"path":"https://yogat3ch.github.io/UU/reference/max2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An alternative to max that preserves names — max2","text":"","code":"max2(x)"},{"path":"https://yogat3ch.github.io/UU/reference/max2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An alternative to max that preserves names — max2","text":"x vec","code":""},{"path":"https://yogat3ch.github.io/UU/reference/max2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An alternative to max that preserves names — max2","text":"atomic returns largest element vector","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/max2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An alternative to max that preserves names — max2","text":"","code":"max2(c(a = 1, b = 2)) #> b  #> 2"},{"path":"https://yogat3ch.github.io/UU/reference/missing_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the missing arguments from the function as character — missing_args","title":"Get the missing arguments from the function as character — missing_args","text":"Get missing arguments function character","code":""},{"path":"https://yogat3ch.github.io/UU/reference/missing_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the missing arguments from the function as character — missing_args","text":"","code":"missing_args(   calling_function = rlang::caller_fn(1),   corresponding_call = sys.call(1),   include_null = TRUE,   exclude_defaults = TRUE )"},{"path":"https://yogat3ch.github.io/UU/reference/missing_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the missing arguments from the function as character — missing_args","text":"calling_function (function) see caller_fn sys.function corresponding_call (call) call calling_function called. See trace_back sys.call include_null (logical) Include args set NULL? exclude_defaults (logical) Exclude arguments wth defaults?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/missing_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the missing arguments from the function as character — missing_args","text":"(character)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/missing_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the missing arguments from the function as character — missing_args","text":"","code":"a <- function(a, b = NULL, c = \"d\") {   missing_args() } a() #> Error in match.call(definition, call, expand.dots, envir): unused arguments (new_process = FALSE, install = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/mkpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a path — mkpath","title":"Construct a path — mkpath","text":"Given path, construct exist.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/mkpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a path — mkpath","text":"","code":"mkpath(path, mkfile = FALSE, mkdir = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/mkpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a path — mkpath","text":"path (character) path mkfile (logical) whether make file exist. TRUE path extension, directory file created mkdir (logical) whether make directory exist. TRUE, path extension, path created directory path.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/mkpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a path — mkpath","text":"(informative messages)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/month_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Month as factor/numeric — month_factor","title":"Month as factor/numeric — month_factor","text":"Month factor/numeric","code":""},{"path":"https://yogat3ch.github.io/UU/reference/month_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Month as factor/numeric — month_factor","text":"","code":"month_factor(x, label = FALSE, abbr = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/month_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month as factor/numeric — month_factor","text":"x chr/Date/POSIXt Names months case insensitive character vector, using abbreviations, must consistent length. Otherwise, Date POSIXt.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/month_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Month as factor/numeric — month_factor","text":"factor x provided, month factor. x provided, ordered factor months","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/month_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Month as factor/numeric — month_factor","text":"","code":"month_factor() #>  [1] Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec #> Levels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec month_factor(c('Se', 'No')) #> [1]  9 11 month_factor(c('Se', 'No'), label = TRUE) #> [1] Sep Nov #> 12 Levels: Jan < Feb < Mar < Apr < May < Jun < Jul < Aug < Sep < ... < Dec month_factor(seq(lubridate::floor_date(Sys.time(), \"year\"), Sys.time(), by = \"day\"), label = TRUE, abbr = FALSE) #>   [1] January   January   January   January   January   January   January   #>   [8] January   January   January   January   January   January   January   #>  [15] January   January   January   January   January   January   January   #>  [22] January   January   January   January   January   January   January   #>  [29] January   January   January   February  February  February  February  #>  [36] February  February  February  February  February  February  February  #>  [43] February  February  February  February  February  February  February  #>  [50] February  February  February  February  February  February  February  #>  [57] February  February  February  March     March     March     March     #>  [64] March     March     March     March     March     March     March     #>  [71] March     March     March     March     March     March     March     #>  [78] March     March     March     March     March     March     March     #>  [85] March     March     March     March     March     March     April     #>  [92] April     April     April     April     April     April     April     #>  [99] April     April     April     April     April     April     April     #> [106] April     April     April     April     April     April     April     #> [113] April     April     April     April     April     April     April     #> [120] April     May       May       May       May       May       May       #> [127] May       May       May       May       May       May       May       #> [134] May       May       May       May       May       May       May       #> [141] May       May       May       May       May       May       May       #> [148] May       May       May       May       June      June      June      #> [155] June      June      June      June      June      June      June      #> [162] June      June      June      June      June      June      June      #> [169] June      June      June      June      June      June      June      #> [176] June      June      June      June      June      June      July      #> [183] July      July      July      July      July      July      July      #> [190] July      July      July      July      July      July      July      #> [197] July      July      July      July      July      July      July      #> [204] July      July      July      July      July      July      July      #> [211] July      July      August    August    August    August    August    #> [218] August    August    August    August    August    August    August    #> [225] August    August    August    August    August    August    August    #> [232] August    August    August    August    August    August    August    #> [239] August    August    August    August    August    September September #> [246] September September September September September September September #> [253] September September September September September September September #> [260] September September September September September September September #> [267] September September September September September September September #> [274] October   October   #> 12 Levels: January < February < March < April < May < June < ... < December"},{"path":"https://yogat3ch.github.io/UU/reference/most.html","id":null,"dir":"Reference","previous_headings":"","what":"Are most values TRUE — most","title":"Are most values TRUE — most","text":"half values TRUE, returns TRUE","code":""},{"path":"https://yogat3ch.github.io/UU/reference/most.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are most values TRUE — most","text":"","code":"most(x)"},{"path":"https://yogat3ch.github.io/UU/reference/most.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are most values TRUE — most","text":"x lgl","code":""},{"path":"https://yogat3ch.github.io/UU/reference/most.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are most values TRUE — most","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/most.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are most values TRUE — most","text":"","code":"most(c(TRUE,TRUE,FALSE)) #> [1] TRUE most(c(TRUE,FALSE,FALSE)) #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/move_files_to_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Move all files to a folder — move_files_to_folder","title":"Move all files to a folder — move_files_to_folder","text":"Move files folder","code":""},{"path":"https://yogat3ch.github.io/UU/reference/move_files_to_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move all files to a folder — move_files_to_folder","text":"","code":"move_files_to_folder(   files = UU::list.files2(\"inst/app/www\", pattern = \"\\\\.js$\", include.dirs = FALSE),   folder = dirs$js() )"},{"path":"https://yogat3ch.github.io/UU/reference/move_files_to_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move all files to a folder — move_files_to_folder","text":"files chr files move folder chr folder move ","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/names_values_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch the names and the values of a vector — names_values_switch","title":"Switch the names and the values of a vector — names_values_switch","text":"Switch names values vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/names_values_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch the names and the values of a vector — names_values_switch","text":"","code":"names_values_switch(x)"},{"path":"https://yogat3ch.github.io/UU/reference/names_values_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch the names and the values of a vector — names_values_switch","text":"x named object","code":""},{"path":"https://yogat3ch.github.io/UU/reference/names_values_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch the names and the values of a vector — names_values_switch","text":"obj","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/names_values_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch the names and the values of a vector — names_values_switch","text":"","code":"names_values_switch(c(a = 1, b = 2)) #>   1   2  #> \"a\" \"b\""},{"path":"https://yogat3ch.github.io/UU/reference/need_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a function from a package, abort if package not installed. — need_pkg","title":"Get a function from a package, abort if package not installed. — need_pkg","text":"Get function package, abort package installed.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/need_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a function from a package, abort if package not installed. — need_pkg","text":"","code":"need_pkg(pkg, fn)"},{"path":"https://yogat3ch.github.io/UU/reference/need_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a function from a package, abort if package not installed. — need_pkg","text":"pkg chr package fn fn function name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/need_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a function from a package, abort if package not installed. — need_pkg","text":"fun","code":""},{"path":"https://yogat3ch.github.io/UU/reference/need_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a function from a package, abort if package not installed. — need_pkg","text":"","code":"need_pkg(\"utils\", \"recover\") #> function ()  #> { #>     if (.isMethodsDispatchOn()) { #>         tState <- tracingState(FALSE) #>         on.exit(tracingState(tState)) #>     } #>     calls <- sys.calls() #>     from <- 0L #>     n <- length(calls) #>     if (identical(sys.function(n), recover))  #>         n <- n - 1L #>     for (i in rev(seq_len(n))) { #>         calli <- calls[[i]] #>         fname <- calli[[1L]] #>         if (!is.na(match(deparse(fname)[1L], c(\"methods::.doTrace\",  #>             \".doTrace\")))) { #>             from <- i - 1L #>             break #>         } #>     } #>     if (from == 0L)  #>         for (i in rev(seq_len(n))) { #>             calli <- calls[[i]] #>             fname <- calli[[1L]] #>             if (!is.name(fname) || is.na(match(as.character(fname),  #>                 c(\"recover\", \"stop\", \"Stop\")))) { #>                 from <- i #>                 break #>             } #>         } #>     if (from > 0L) { #>         if (!interactive()) { #>             try(dump.frames()) #>             cat(gettext(\"recover called non-interactively; frames dumped, use debugger() to view\\n\")) #>             return(NULL) #>         } #>         calls <- limitedLabels(calls[1L:from]) #>         repeat { #>             which <- menu(calls, title = \"\\nEnter a frame number, or 0 to exit  \") #>             if (which)  #>                 eval(substitute(browser(skipCalls = skip), list(skip = 7 -  #>                   which)), envir = sys.frame(which)) #>             else break #>         } #>     } #>     else cat(gettext(\"No suitable frames for recover()\\n\")) #> } #> <environment: namespace:utils>"},{"path":"https://yogat3ch.github.io/UU/reference/needs_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if files need to be updated — needs_update","title":"Check if files need to be updated — needs_update","text":"Check files need updated","code":""},{"path":"https://yogat3ch.github.io/UU/reference/needs_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if files need to be updated — needs_update","text":"","code":"needs_update(   x,   path = FALSE,   threshold = lubridate::floor_date(Sys.time(), \"day\") )"},{"path":"https://yogat3ch.github.io/UU/reference/needs_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if files need to be updated — needs_update","text":"x (chr) file path check last updated time path (lgl) whether x path files checked threshold threshold time. files last modified times less time, marked needing update.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/needs_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if files need to be updated — needs_update","text":"(tbl) columns: full_path full path file(s) basename file(s) basename last_updated last updated time threshold threshold time comparison needs_update logical whether file updated","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/nm_to_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a randomly formatted name into snakecase id — nm_to_id","title":"Make a randomly formatted name into snakecase id — nm_to_id","text":"Make randomly formatted name snakecase id","code":""},{"path":"https://yogat3ch.github.io/UU/reference/nm_to_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a randomly formatted name into snakecase id — nm_to_id","text":"","code":"nm_to_id(x)"},{"path":"https://yogat3ch.github.io/UU/reference/nm_to_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a randomly formatted name into snakecase id — nm_to_id","text":"x chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/nm_to_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a randomly formatted name into snakecase id — nm_to_id","text":"chr snakecase id","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/nm_to_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a randomly formatted name into snakecase id — nm_to_id","text":"","code":"nm_to_id(\"This convoluted name\") #> [1] \"this_convoluted_name\""},{"path":"https://yogat3ch.github.io/UU/reference/nonull.html","id":null,"dir":"Reference","previous_headings":"","what":"Is value non-null? — nonull","title":"Is value non-null? — nonull","text":"value non-null?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/nonull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is value non-null? — nonull","text":"","code":"nonull(...)"},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/nonull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is value non-null? — nonull","text":"Think.fr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/nonull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is value non-null? — nonull","text":"","code":"nonull(NULL) #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/not_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Is value non-NA? — not_na","title":"Is value non-NA? — not_na","text":"value non-NA?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/not_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is value non-NA? — not_na","text":"","code":"not_na(...)"},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/not_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is value non-NA? — not_na","text":"Think.fr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/not_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is value non-NA? — not_na","text":"","code":"not_na(c(\"a\", NA)) #> [1]  TRUE FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/num2str.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","title":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","text":"Convert numeric value string abbreviation K, M, B Thousand, Million & Billion","code":""},{"path":"https://yogat3ch.github.io/UU/reference/num2str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","text":"","code":"num2str(   x,   sf = 2,   outtype = c(\"abbreviated\", \"with_suffix\", \"rounded\"),   suffix_lb = \"K\" )"},{"path":"https://yogat3ch.github.io/UU/reference/num2str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","text":"x num sf num significant figures round outtype chr Format outtype abbreviated  takes form XX X digits with_suffix takes form XXS X digits S suffix rounded  takes form XX.XX rounded sf sig figs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/num2str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/num2str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert numeric value to a string abbreviation with K, M, B for Thousand, Million & Billion — num2str","text":"","code":"num2str(10000) #> [1] \"10K\""},{"path":"https://yogat3ch.github.io/UU/reference/num2str_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert number to string Vectorized version — num2str_vec","title":"Convert number to string Vectorized version — num2str_vec","text":"Convert number string Vectorized version","code":""},{"path":"https://yogat3ch.github.io/UU/reference/num2str_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert number to string Vectorized version — num2str_vec","text":"","code":"num2str_vec(   x,   sf = 2,   outtype = c(\"abbreviated\", \"with_suffix\", \"rounded\"),   suffix_lb = \"K\" )"},{"path":"https://yogat3ch.github.io/UU/reference/num2str_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert number to string Vectorized version — num2str_vec","text":"x num sf num significant figures round outtype chr Format outtype abbreviated  takes form XX X digits with_suffix takes form XXS X digits S suffix rounded  takes form XX.XX rounded sf sig figs","code":""},{"path":"https://yogat3ch.github.io/UU/reference/num2str_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert number to string Vectorized version — num2str_vec","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/num2str_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert number to string Vectorized version — num2str_vec","text":"","code":"num2str(10000) #> [1] \"10K\""},{"path":"https://yogat3ch.github.io/UU/reference/num_chr_suffi.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviations of numeric magnitude — num_chr_suffi","title":"Abbreviations of numeric magnitude — num_chr_suffi","text":"Abbreviations numeric magnitude","code":""},{"path":"https://yogat3ch.github.io/UU/reference/num_chr_suffi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviations of numeric magnitude — num_chr_suffi","text":"","code":"num_chr_suffi"},{"path":"https://yogat3ch.github.io/UU/reference/num_chr_suffi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Abbreviations of numeric magnitude — num_chr_suffi","text":"object class character length 4.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/object_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide the appropriate file extension for a given object — object_ext","title":"Provide the appropriate file extension for a given object — object_ext","text":"Provide appropriate file extension given object","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide the appropriate file extension for a given object — object_ext","text":"","code":"object_ext(object)"},{"path":"https://yogat3ch.github.io/UU/reference/object_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide the appropriate file extension for a given object — object_ext","text":"object determine appropriate function writing disk","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide the appropriate file extension for a given object — object_ext","text":"(character)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the appropriate function for writing the supplied object to disk — object_fn","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"Return appropriate function writing supplied object disk","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"","code":"object_fn(x, filepath)"},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"x (object)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"(function) See details function","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"data.frame/matrix write_feather ggplot ggsave anything else saveRDS","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/object_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the appropriate function for writing the supplied object to disk — object_fn","text":"","code":"object_fn(1:15) #> function (object, file = \"\", ascii = FALSE, version = NULL, compress = TRUE,  #>     refhook = NULL)  #> { #>     if (is.character(file)) { #>         if (file == \"\")  #>             stop(\"'file' must be non-empty string\") #>         object <- object #>         mode <- if (ascii %in% FALSE)  #>             \"wb\" #>         else \"w\" #>         con <- if (is.logical(compress))  #>             if (compress)  #>                 gzfile(file, mode) #>             else file(file, mode) #>         else switch(compress, bzip2 = bzfile(file, mode), xz = xzfile(file,  #>             mode), gzip = gzfile(file, mode), stop(\"invalid 'compress' argument: \",  #>             compress)) #>         on.exit(close(con)) #>     } #>     else if (inherits(file, \"connection\")) { #>         if (!missing(compress))  #>             warning(\"'compress' is ignored unless 'file' is a file name\") #>         con <- file #>     } #>     else stop(\"bad 'file' argument\") #>     .Internal(serializeToConn(object, con, ascii, version, refhook)) #> } #> <bytecode: 0x55a747ec8610> #> <environment: namespace:base>"},{"path":"https://yogat3ch.github.io/UU/reference/object_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide the appropriate file read/write function — object_write","title":"Provide the appropriate file read/write function — object_write","text":"Write object disk","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide the appropriate file read/write function — object_write","text":"","code":"object_write(x, filename, path = \".\", ..., verbose = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/object_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide the appropriate file read/write function — object_write","text":"x (object) write disk filename (chr) without path write disk path (chr) file written ... arguments passed methods. See ?object_fn verbose (logical) Whether print saved messages. Default TRUE","code":""},{"path":"https://yogat3ch.github.io/UU/reference/object_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide the appropriate file read/write function — object_write","text":"Success message file written","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get odd numbers — odds","title":"Get odd numbers — odds","text":"Get odd numbers","code":""},{"path":"https://yogat3ch.github.io/UU/reference/odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get odd numbers — odds","text":"","code":"odds(x)"},{"path":"https://yogat3ch.github.io/UU/reference/odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get odd numbers — odds","text":"x int","code":""},{"path":"https://yogat3ch.github.io/UU/reference/odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get odd numbers — odds","text":"","code":"odds(1:10) #> [1] 1 3 5 7 9"},{"path":"https://yogat3ch.github.io/UU/reference/opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check option value. — opts","title":"Check option value. — opts","text":"list populate dynamically options project local .Rprofile allowing read calling method. population methods happens beginning session. can accessed UU::opts. wish check option values non-interactive sessions, see write_opts function write file opts object based current state .Rprofile can used non-interactive (deployed apps) sessions.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check option value. — opts","text":"","code":"opts\\$your_option_name()"},{"path":"https://yogat3ch.github.io/UU/reference/opts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Check option value. — opts","text":"object class NULL length 0.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check option value. — opts","text":"default specified option set options list, value returned. facilitates retrieving option checking whether set setting separately .","code":""},{"path":"https://yogat3ch.github.io/UU/reference/opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check option value. — opts","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/package_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the size of a package, or all packages in a folder — package_size","title":"Return the size of a package, or all packages in a folder — package_size","text":"Return size package, packages folder","code":""},{"path":"https://yogat3ch.github.io/UU/reference/package_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the size of a package, or all packages in a folder — package_size","text":"","code":"package_size(packages, path = .libPaths()[1])"},{"path":"https://yogat3ch.github.io/UU/reference/package_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the size of a package, or all packages in a folder — package_size","text":"packages chr package names path chr package folders .libPaths","code":""},{"path":"https://yogat3ch.github.io/UU/reference/package_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the size of a package, or all packages in a folder — package_size","text":"chr/tbl depending whether packages path provided","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/package_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the size of a package, or all packages in a folder — package_size","text":"","code":"package_size() #> # A tibble: 80 × 4 #>    pkg_name    dir_sizeMB dir_size dir_path                                    #>    <chr>            <dbl>    <dbl> <chr>                                       #>  1 ini             0.0176    17589 /home/runner/work/_temp/Library/ini         #>  2 prettyunits     0.0209    20879 /home/runner/work/_temp/Library/prettyunits #>  3 tinytex         0.0210    21009 /home/runner/work/_temp/Library/tinytex     #>  4 generics        0.0212    21189 /home/runner/work/_temp/Library/generics    #>  5 base64enc       0.0222    22155 /home/runner/work/_temp/Library/base64enc   #>  6 mime            0.0223    22254 /home/runner/work/_temp/Library/mime        #>  7 highr           0.0224    22380 /home/runner/work/_temp/Library/highr       #>  8 memoise         0.0228    22829 /home/runner/work/_temp/Library/memoise     #>  9 jquerylib       0.0230    23021 /home/runner/work/_temp/Library/jquerylib   #> 10 fastmap         0.0230    23039 /home/runner/work/_temp/Library/fastmap     #> # ℹ 70 more rows"},{"path":"https://yogat3ch.github.io/UU/reference/pkg_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the current package namespace — pkg_ns","title":"Return the current package namespace — pkg_ns","text":"Return current package namespace","code":""},{"path":"https://yogat3ch.github.io/UU/reference/pkg_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the current package namespace — pkg_ns","text":"","code":"pkg_ns(pkg = basename(rprojroot::find_package_root_file()))"},{"path":"https://yogat3ch.github.io/UU/reference/pkg_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the current package namespace — pkg_ns","text":"pkg chr package name. Defaults current","code":""},{"path":"https://yogat3ch.github.io/UU/reference/pkg_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the current package namespace — pkg_ns","text":"env","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/profile_script.html","id":null,"dir":"Reference","previous_headings":"","what":"profile_script — profile_script","title":"profile_script — profile_script","text":"function add profiling code script wherever following flags found first non-spacing characters line: #<p Opening comment flag profile_open inserted. #>p Closing comment flag profile_close inserted.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/profile_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"profile_script — profile_script","text":"","code":"profile_script(   .file,   profile_open = utils::Rprof(fs::path(dir_profvis, stringr::str_remove(basename(.file),     \"\\\\.[a-zA-Z0-9\\\\-]+$\"), glue::glue(\"{.lo}-{.lc}\"), ext = \"Rprof\"), interval =     0.02, line.profiling = TRUE, memory.profiling = TRUE),   profile_close = utils::Rprof(NULL),   dir_profvis = \"profvis\",   remove = FALSE,   new_script = TRUE )"},{"path":"https://yogat3ch.github.io/UU/reference/profile_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"profile_script — profile_script","text":".file path script profile_open (expression) code added preceding opening comment flag. Consider using glue internal variables can used file naming conventions. addition function arguments, following variable names can used: .lo Short line open, line number opening profile code. .lc Short line close, line number closing profile code. Default: utils::Rprof(fs::path(dir_profvis, basename(.x), glue::glue('{.lo}-{.lc}'), ext = \"Rprof\"), interval = .01, line.profiling = TRUE, gc.profiling = TRUE, memory.profiling = TRUE). profile_script called script called script.R opening flag line 20 closing flag line 30, line 20 changed follows: utils::Rprof(\"profvis/script.R/20-30.Rprof\", interval = 0.01, line.profiling = TRUE, gc.profiling = TRUE, memory.profiling = TRUE) #<p. profile_close (expression) code added preceding closing comment flag.  Default: utils::Rprof(NULL) dir_profvis (character) directory profvis related files put. Default: \"profvis\". Profile-ready script copies (new_scripts = TRUE) Rprof files/directories placed . Set NULL use working directory overwrite existing files. remove (logical/character) indicate whether remove profiling code. Default: FALSE. Change TRUE remove profile code leave flags. Change \"f\"/\"flags\" remove code flags. Remove modifies .file place. new_script (logical) indicate whether write new profile-ready script copies dir_profvis. Default: TRUE, FALSE character vector output  profile-ready script lines function can written file manually.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/read_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Javascript file — read_js","title":"Read Javascript file — read_js","text":"Read Javascript file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/read_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Javascript file — read_js","text":"","code":"read_js(filename)"},{"path":"https://yogat3ch.github.io/UU/reference/read_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Javascript file — read_js","text":"filename chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/read_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Javascript file — read_js","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. plyr round_any rlang %|%, %||%","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_op.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a compound regex grouped statement — regex_op","title":"Create a compound regex grouped statement — regex_op","text":"Create compound regex grouped statement","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_op.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a compound regex grouped statement — regex_op","text":"","code":"regex_op(x, type = \"|\", prefix = \"\", suffix = \"\")"},{"path":"https://yogat3ch.github.io/UU/reference/regex_op.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a compound regex grouped statement — regex_op","text":"x (character) regex strings type (character) |, &, , not_before supported. pre (character) regex tokens precede string group. IE (?:[pre]x) w/braces suf (character) regex tokens follow string group. IE (?:x[suf]) w/braces","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_op.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a compound regex grouped statement — regex_op","text":"(character) grouped regex statement","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a compound regex grouped OR statement — regex_or","title":"Create a compound regex grouped OR statement — regex_or","text":"Create compound regex grouped statement","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a compound regex grouped OR statement — regex_or","text":"","code":"regex_or(x, prefix = \"\", suffix = \"\", type = \"|\")"},{"path":"https://yogat3ch.github.io/UU/reference/regex_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a compound regex grouped OR statement — regex_or","text":"x (character) regex strings type (character) |, &, , not_before supported.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/regex_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a compound regex grouped OR statement — regex_or","text":"(character) grouped regex statement","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rgb2hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","title":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","text":"Convert r,g,b,values string numeric hex","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rgb2hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","text":"","code":"rgb2hex(red, green, blue, alpha = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/rgb2hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","text":"red chr/num Either CSS rgb() rgba() declaration string, red value numeric. alpha lgl/num Whether include alpha value (8 digit hex) output , alpha value apply, set TRUE, alpha set, alpha value 1 appended. numeric, value 0 & 1 inclusive set alpha value.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rgb2hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","text":"chr hex value","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/rgb2hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert r,g,b,a values as string or numeric to hex — rgb2hex","text":"","code":"rgb2hex(\"rgba(18,180,211,1)\", alpha = TRUE) #> [1] \"#12B4D3FF\" rgb2hex(\"rgba(18,180,211,1)\", alpha = FALSE) #> [1] \"#12B4D3\""},{"path":"https://yogat3ch.github.io/UU/reference/rle_df.html","id":null,"dir":"Reference","previous_headings":"","what":"rle_df - create a run-length-encoding data.frame — rle_df","title":"rle_df - create a run-length-encoding data.frame — rle_df","text":"Given rle function return data.frame starts, ends, indexes thereof run lengths. Credit: https://stackoverflow.com/questions/43875716/find-start--end-positions-indices--runs-consecutive-values","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rle_df - create a run-length-encoding data.frame — rle_df","text":"","code":"rle_df(x)"},{"path":"https://yogat3ch.github.io/UU/reference/rle_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rle_df - create a run-length-encoding data.frame — rle_df","text":"x (vector) object run rle","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rle_df - create a run-length-encoding data.frame — rle_df","text":"(data.frame) length, values, start end indices.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rle_df - create a run-length-encoding data.frame — rle_df","text":"","code":"rle_df(sample(c(TRUE,FALSE), replace = TRUE, 100)) #> # A tibble: 64 × 4 #>    lengths values start   end #>      <int> <lgl>  <dbl> <int> #>  1       1 TRUE       1     1 #>  2       1 FALSE      2     2 #>  3       2 TRUE       3     4 #>  4       2 FALSE      5     6 #>  5       2 TRUE       7     8 #>  6       1 FALSE      9     9 #>  7       1 TRUE      10    10 #>  8       1 FALSE     11    11 #>  9       2 TRUE      12    13 #> 10       2 FALSE     14    15 #> # ℹ 54 more rows"},{"path":"https://yogat3ch.github.io/UU/reference/rle_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an RLE Grouping from a logical vector — rle_groups","title":"Create an RLE Grouping from a logical vector — rle_groups","text":"Create RLE Grouping logical vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an RLE Grouping from a logical vector — rle_groups","text":"","code":"rle_groups(x)"},{"path":"https://yogat3ch.github.io/UU/reference/rle_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an RLE Grouping from a logical vector — rle_groups","text":"x lgl vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an RLE Grouping from a logical vector — rle_groups","text":"list","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an RLE Grouping from a logical vector — rle_groups","text":"","code":"rle_groups(sample(c(TRUE, FALSE), 20, replace = TRUE)) #> [[1]] #> [1] 4 5 6 7 8 #>  #> [[2]] #> [1] 11 #>  #> [[3]] #> [1] 14 15 16 17 #>  #> [[4]] #> [1] 19 20 #>"},{"path":"https://yogat3ch.github.io/UU/reference/rle_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","title":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","text":"Create sequence start end given value rle_df indexing","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","text":"","code":"rle_seq(rle_df, value)"},{"path":"https://yogat3ch.github.io/UU/reference/rle_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","text":"rle_df (tbl) See rle_df value () Value filter values column. Require values value column unique.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","text":"(dbl)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/rle_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sequence from the start to the end for a given value from an rle_df for indexing — rle_seq","text":"","code":"rle_seq(rle_df(rep(letters[1:3], each = 3)), \"c\") #> [1] 7 8 9"},{"path":"https://yogat3ch.github.io/UU/reference/round_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the global minima/maxima of input vectors — round_to","title":"Find the global minima/maxima of input vectors — round_to","text":"accuracy omitted, number rounded nearest order magnitude IE 145, fn = min, round 100","code":""},{"path":"https://yogat3ch.github.io/UU/reference/round_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the global minima/maxima of input vectors — round_to","text":"","code":"round_to(..., accuracy = NULL, fn = min, f = NULL)"},{"path":"https://yogat3ch.github.io/UU/reference/round_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the global minima/maxima of input vectors — round_to","text":"... num vectors accuracy number round ; POSIXct objects, number seconds fn fun min/max f rounding function: floor, ceiling round","code":""},{"path":"https://yogat3ch.github.io/UU/reference/round_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the global minima/maxima of input vectors — round_to","text":"num","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/round_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the global minima/maxima of input vectors — round_to","text":"","code":"round_to(runif(10, 5:10), runif(2, 2:5)) #> Warning: NAs produced #> Warning: NAs produced #> [1] NaN round_to(145) #> [1] 100"},{"path":"https://yogat3ch.github.io/UU/reference/same.html","id":null,"dir":"Reference","previous_headings":"","what":"Are the values in each object the same? — same","title":"Are the values in each object the same? — same","text":"primary difference identical & .equal objects sorted name order matter. Set sort_by_names = FALSE sort values.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/same.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are the values in each object the same? — same","text":"","code":"same(x, y, sort_by_names = TRUE, ...)"},{"path":"https://yogat3ch.github.io/UU/reference/same.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are the values in each object the same? — same","text":"x obj y obj ... Arguments passed base::.equal target R object. current R object, compared target.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/same.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are the values in each object the same? — same","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/same.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are the values in each object the same? — same","text":"","code":"same(list(x = 1, y = 2), list(y = 2, x = 1)) #> [1] TRUE"},{"path":"https://yogat3ch.github.io/UU/reference/season_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Season as factor/numeric — season_factor","title":"Season as factor/numeric — season_factor","text":"Season factor/numeric","code":""},{"path":"https://yogat3ch.github.io/UU/reference/season_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Season as factor/numeric — season_factor","text":"","code":"season_factor(x, label = FALSE, abbr = TRUE)"},{"path":"https://yogat3ch.github.io/UU/reference/season_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season as factor/numeric — season_factor","text":"x chr/Date/POSIXt Names seasons case insensitive character vector, using abbreviations, must consistent length. Otherwise, Date POSIXt.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/season_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Season as factor/numeric — season_factor","text":"factor x provided, season factor. x provided, ordered factor seasons.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/season_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Season as factor/numeric — season_factor","text":"","code":"season_factor() #> [1] Spr Sum Fal Win #> Levels: Spr Sum Fal Win season_factor(c('Sp', 'Su')) #> [1] 3 6 season_factor(c('Sp', 'Su'), label = TRUE) #> [1] Spr Sum #> Levels: Spr < Sum < Fal < Win season_factor(seq(lubridate::floor_date(Sys.time(), \"year\"), Sys.time(), by = \"day\"), label = TRUE, abbr = FALSE) #>   [1] Winter Winter Winter Winter Winter Winter Winter Winter Winter Winter #>  [11] Winter Winter Winter Winter Winter Winter Winter Winter Winter Winter #>  [21] Winter Winter Winter Winter Winter Winter Winter Winter Winter Winter #>  [31] Winter Winter Winter Winter Winter Winter Winter Winter Winter Winter #>  [41] Winter Winter Winter Winter Winter Winter Winter Winter Winter Winter #>  [51] Winter Winter Winter Winter Winter Winter Winter Winter Winter Spring #>  [61] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #>  [71] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #>  [81] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #>  [91] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [101] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [111] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [121] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [131] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [141] Spring Spring Spring Spring Spring Spring Spring Spring Spring Spring #> [151] Spring Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [161] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [171] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [181] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [191] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [201] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [211] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [221] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [231] Summer Summer Summer Summer Summer Summer Summer Summer Summer Summer #> [241] Summer Summer Summer Fall   Fall   Fall   Fall   Fall   Fall   Fall   #> [251] Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   #> [261] Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   Fall   #> [271] Fall   Fall   Fall   Fall   Fall   #> Levels: Spring < Summer < Fall < Winter"},{"path":"https://yogat3ch.github.io/UU/reference/shiny_error_recover.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle recover on error when obtuse shiny errors are encountered — shiny_error_recover","title":"Toggle recover on error when obtuse shiny errors are encountered — shiny_error_recover","text":"Toggle recover error obtuse shiny errors encountered","code":""},{"path":"https://yogat3ch.github.io/UU/reference/shiny_error_recover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle recover on error when obtuse shiny errors are encountered — shiny_error_recover","text":"","code":"shiny_error_recover()"},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/size.html","id":null,"dir":"Reference","previous_headings":"","what":"Digital storage size conversion\nSee object.size — size","title":"Digital storage size conversion\nSee object.size — size","text":"Digital storage size conversion See object.size Vectorized version size","code":""},{"path":"https://yogat3ch.github.io/UU/reference/size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Digital storage size conversion\nSee object.size — size","text":"","code":"size(   x,   in_unit = \"b\",   out_unit = c(\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\")[3] )  size_(   x,   in_unit = \"b\",   out_unit = c(\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\")[3] )"},{"path":"https://yogat3ch.github.io/UU/reference/size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Digital storage size conversion\nSee object.size — size","text":"x (numeric) in_unit (character) units x out_unit (character) units output number Default: Mb. See object.size options. standard (character)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Digital storage size conversion\nSee object.size — size","text":"(numeric) value out_units","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Digital storage size conversion\nSee object.size — size","text":"","code":"size(50, \"Mb\") #> [1] 50 size(50, \"Gb\") #> [1] 51200 size(50, \"Gb\", \"Mb\") #> [1] 51200"},{"path":"https://yogat3ch.github.io/UU/reference/smode.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical mode — smode","title":"Statistical mode — smode","text":"Return frequenctly occuring item dataset","code":""},{"path":"https://yogat3ch.github.io/UU/reference/smode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical mode — smode","text":"","code":"smode(x)"},{"path":"https://yogat3ch.github.io/UU/reference/smode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical mode — smode","text":"x (vector)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/smode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical mode — smode","text":"(vector)","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/startup.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project & user-level .Renviron & .Rprofile — startup","title":"Load project & user-level .Renviron & .Rprofile — startup","text":"Load project & user-level .Renviron & .Rprofile","code":""},{"path":"https://yogat3ch.github.io/UU/reference/startup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project & user-level .Renviron & .Rprofile — startup","text":"","code":"startup()"},{"path":"https://yogat3ch.github.io/UU/reference/str_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","title":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","text":"Convert inequality statements character, mathematic, symbol function representations","code":""},{"path":"https://yogat3ch.github.io/UU/reference/str_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","text":"","code":"str_comparison(x, outtype = \"chr\")"},{"path":"https://yogat3ch.github.io/UU/reference/str_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","text":"x chr vector inequality statements outtype chr class outype \"chr\" character \"str\" character \"sym\" symbol/name \"name\" symbol/name \"fun\" function","code":""},{"path":"https://yogat3ch.github.io/UU/reference/str_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","text":"chr/name/fun depending requested outtype","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/str_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert inequality statements between character, mathematic, symbol and function representations — str_comparison","text":"","code":"str_comparison(\">\") #> [1] \"greater than\" str_comparison(\"less than or equal to\", \"fun\") #> [[1]] #> function (e1, e2)  .Primitive(\"<=\") #>  str_comparison(\"greater than or equal to\", \"sym\") #> [[1]] #> `>=` #>"},{"path":"https://yogat3ch.github.io/UU/reference/string_split_comma.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a list of packages separated by commas — string_split_comma","title":"Split a list of packages separated by commas — string_split_comma","text":"Split list packages separated commas","code":""},{"path":"https://yogat3ch.github.io/UU/reference/string_split_comma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a list of packages separated by commas — string_split_comma","text":"","code":"string_split_comma(x)"},{"path":"https://yogat3ch.github.io/UU/reference/string_split_comma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a list of packages separated by commas — string_split_comma","text":"x chr packages, often output renv","code":""},{"path":"https://yogat3ch.github.io/UU/reference/string_split_comma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a list of packages separated by commas — string_split_comma","text":"chr vector package character","code":""},{"path":"https://yogat3ch.github.io/UU/reference/string_split_comma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a list of packages separated by commas — string_split_comma","text":"","code":"string_split_comma(c(\"DT, USAboundaries, USAboundariesData, cicerone, config\", \"ggplot2, golem, googlesheets4, htmlwidgets, leaflet\", \"paletteer, plotly, rmapshaper, scales, sf, shiny, shinyBS\", \"shinyWidgets, shinyauthr, shinycssloaders, shinydashboard\", \"shinyjs, shinyvalidate, tidyr\") ) #> c(\"DT\", \"USAboundaries\", \"USAboundariesData\", \"cicerone\", \"config\",  #> \"ggplot2\", \"golem\", \"googlesheets4\", \"htmlwidgets\", \"leaflet\",  #> \"paletteer\", \"plotly\", \"rmapshaper\", \"scales\", \"sf\", \"shiny\",  #> \"shinyBS\", \"shinyWidgets\", \"shinyauthr\", \"shinycssloaders\", \"shinydashboard\",  #> \"shinyjs\", \"shinyvalidate\", \"tidyr\")"},{"path":"https://yogat3ch.github.io/UU/reference/strip_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all HTML tags from a character vector — strip_html","title":"Remove all HTML tags from a character vector — strip_html","text":"Remove HTML tags character vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/strip_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all HTML tags from a character vector — strip_html","text":"","code":"strip_html(x)"},{"path":"https://yogat3ch.github.io/UU/reference/strip_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all HTML tags from a character vector — strip_html","text":"x chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/strip_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all HTML tags from a character vector — strip_html","text":"chr without HTML tags","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/strip_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove all HTML tags from a character vector — strip_html","text":"","code":"strip_html(\"The <strong>fox<\/strong> ran\") #> [1] \"The fox ran\""},{"path":"https://yogat3ch.github.io/UU/reference/time_aggregates.html","id":null,"dir":"Reference","previous_headings":"","what":"Timespans as character — time_aggregates","title":"Timespans as character — time_aggregates","text":"Timespans character","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_aggregates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timespans as character — time_aggregates","text":"","code":"time_aggregates"},{"path":"https://yogat3ch.github.io/UU/reference/time_aggregates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Timespans as character — time_aggregates","text":"object class list length 7.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/time_difftimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Timespans as durations — time_difftimes","title":"Timespans as durations — time_difftimes","text":"Timespans durations","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_difftimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timespans as durations — time_difftimes","text":"","code":"time_difftimes"},{"path":"https://yogat3ch.github.io/UU/reference/time_difftimes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Timespans as durations — time_difftimes","text":"object class list length 7.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/time_elapsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a logical on an interval — time_elapsed","title":"Return a logical on an interval — time_elapsed","text":"Return logical interval","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_elapsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a logical on an interval — time_elapsed","text":"","code":"time_elapsed(file = \".interval_timer.rds\", interval = lubridate::weeks(1))"},{"path":"https://yogat3ch.github.io/UU/reference/time_elapsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a logical on an interval — time_elapsed","text":"file chr filename store interval time interval period/duration Default 1 week","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_elapsed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a logical on an interval — time_elapsed","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/time_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn timespans into an ordered factor — time_factor","title":"Turn timespans into an ordered factor — time_factor","text":"Turn timespans ordered factor","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn timespans into an ordered factor — time_factor","text":"","code":"time_factor(x)"},{"path":"https://yogat3ch.github.io/UU/reference/time_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn timespans into an ordered factor — time_factor","text":"x chr timespans","code":""},{"path":"https://yogat3ch.github.io/UU/reference/time_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn timespans into an ordered factor — time_factor","text":"factor","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/time_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn timespans into an ordered factor — time_factor","text":"","code":"time_factor(c(\"year\", \"week\")) #> [1] year week #> Levels: hour < day < week < month < quarter < season < year"},{"path":"https://yogat3ch.github.io/UU/reference/timespan.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a timespan duration — timespan","title":"Create a timespan duration — timespan","text":"Create timespan duration","code":""},{"path":"https://yogat3ch.github.io/UU/reference/timespan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a timespan duration — timespan","text":"","code":"timespan(x)"},{"path":"https://yogat3ch.github.io/UU/reference/timespan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a timespan duration — timespan","text":"x chr/POSIXt/Date chr One year, season, quarter, month, week, day, hour POSIXt/Date/Datetime Date Datetime vector","code":""},{"path":"https://yogat3ch.github.io/UU/reference/timespan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a timespan duration — timespan","text":"Duration See duration","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/timespan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a timespan duration — timespan","text":"","code":"timespan(seq(Sys.time() - lubridate::dyears(), Sys.time(), by = 1)) #> [1] \"31557600s (~1 years)\" timespan(\"season\") #> [1] \"7889400s (~13.04 weeks)\""},{"path":"https://yogat3ch.github.io/UU/reference/toggle.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle or change an option listed in a local .Rprofile for the session — toggle","title":"Toggle or change an option listed in a local .Rprofile for the session — toggle","text":"options project local .Rprofile populate object named methods. named methods, called, toggle options . Alternatively, option logical, can changed using set argument. loads start R session startup called user-level .Rprofile. methods meant interactive use .","code":""},{"path":"https://yogat3ch.github.io/UU/reference/toggle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle or change an option listed in a local .Rprofile for the session — toggle","text":"","code":"toggle\\$your_logical_option_name()  toggle\\$your_non_logical_option_name(set = \"value\")"},{"path":"https://yogat3ch.github.io/UU/reference/toggle.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toggle or change an option listed in a local .Rprofile for the session — toggle","text":"object class NULL length 0.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/toggle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toggle or change an option listed in a local .Rprofile for the session — toggle","text":"opt chr option name toggle. Dynamically populated set obj value set option (takes precedence toggle)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/toggle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toggle or change an option listed in a local .Rprofile for the session — toggle","text":"msg inform user option set ","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/trace_back_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a trace back as a json for error logging — trace_back_json","title":"Writes a trace back as a json for error logging — trace_back_json","text":"Writes trace back json error logging","code":""},{"path":"https://yogat3ch.github.io/UU/reference/trace_back_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a trace back as a json for error logging — trace_back_json","text":"","code":"trace_back_json(   e = NULL,   file = glue::glue(\"{lubridate::format_ISO8601(Sys.time())}.json\"),   tb = rlang::trace_back(bottom = 1) )"},{"path":"https://yogat3ch.github.io/UU/reference/trace_back_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a trace back as a json for error logging — trace_back_json","text":"e error Error condition object, optional file chr path file written. tb rlang_trace Trace back","code":""},{"path":"https://yogat3ch.github.io/UU/reference/trace_back_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes a trace back as a json for error logging — trace_back_json","text":"None called side effect writing file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/trace_back_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes a trace back as a json for error logging — trace_back_json","text":"","code":"trace_back_json()"},{"path":"https://yogat3ch.github.io/UU/reference/unit_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviations of numeric magnitude for various units — unit_conversion","title":"Abbreviations of numeric magnitude for various units — unit_conversion","text":"Abbreviations numeric magnitude various units","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviations of numeric magnitude for various units — unit_conversion","text":"","code":"unit_conversion"},{"path":"https://yogat3ch.github.io/UU/reference/unit_conversion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Abbreviations of numeric magnitude for various units — unit_conversion","text":"object class tbl_df (inherits tbl, data.frame) 16 rows 6 columns.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the row corresponding to a value in unit_conversion — unit_find","title":"Find the row corresponding to a value in unit_conversion — unit_find","text":"Find row corresponding value unit_conversion","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the row corresponding to a value in unit_conversion — unit_find","text":"","code":"unit_find(x)"},{"path":"https://yogat3ch.github.io/UU/reference/unit_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the row corresponding to a value in unit_conversion — unit_find","text":"x chr/num vector find","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the row corresponding to a value in unit_conversion — unit_find","text":"tbl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/unit_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the row corresponding to a value in unit_conversion — unit_find","text":"","code":"unit_find(\"B\") #> # A tibble: 1 × 6 #>   unit   magnitude begin end         abbrev unit_eng  #>   <chr>      <dbl> <chr> <chr>       <chr>  <chr>     #> 1 AF    1000000000 B     in billions B      acre_feet"},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify unit abbreviations — unit_modify","title":"Modify unit abbreviations — unit_modify","text":"Modify unit abbreviations","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify unit abbreviations — unit_modify","text":"","code":"unit_modify(x, unit, outtype, magnitude = magnitude_order(x))"},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify unit abbreviations — unit_modify","text":"x num maximum number dataset unit chr Type units, supported values : AF, F, $, W, MW outtype chr type output added. Current possibilities : begin, end, abbrev, unit_eng magnitude num order magnitude unit. highest triplet used. See magnitude_triplet","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify unit abbreviations — unit_modify","text":"chr updated units","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify unit abbreviations — unit_modify","text":"","code":"unit_modify(10^7, \"AF\", \"abbrev\") #> [1] \"MAF\""},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify unit abbreviation, vectorized version — unit_modify_vec","title":"Modify unit abbreviation, vectorized version — unit_modify_vec","text":"Modify unit abbreviation, vectorized version","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify unit abbreviation, vectorized version — unit_modify_vec","text":"","code":"unit_modify_vec(x, unit, outtype, magnitude = magnitude_order(x))"},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify unit abbreviation, vectorized version — unit_modify_vec","text":"x num maximum number dataset unit chr Type units, supported values : AF, F, $, W, MW outtype chr type output added. Current possibilities : begin, end, abbrev, unit_eng magnitude num order magnitude unit. highest triplet used. See magnitude_triplet","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify unit abbreviation, vectorized version — unit_modify_vec","text":"chr updated units","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/unit_modify_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify unit abbreviation, vectorized version — unit_modify_vec","text":"","code":"unit_modify(10^7, \"AF\", \"abbrev\") #> [1] \"MAF\""},{"path":"https://yogat3ch.github.io/UU/reference/unit_shorthand.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily translate long form unit names to shorthand — unit_shorthand","title":"Easily translate long form unit names to shorthand — unit_shorthand","text":"Useful condensed displays like axis titles","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_shorthand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily translate long form unit names to shorthand — unit_shorthand","text":"","code":"unit_shorthand(x, units = unit_trans)"},{"path":"https://yogat3ch.github.io/UU/reference/unit_shorthand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily translate long form unit names to shorthand — unit_shorthand","text":"x chr/tbl Character data.frame long form names. Currently supports Acre-feet = AF,Months = mths,Percent = %,Years = yrs,Number = #,Cubic feet per second = Ft^3/s,Million Acre-Feet = MAF,Megawatt-hours = MWh,Megawatts = MW,Gigawatt-hours = GWh,Gigawatt = GW,Feet = Ft units chr Unit translation vector shorthand vectur long form names names. Uses unit_trans default, append additional specific translations yet represent unit_trans open PR issue add translations inclined.","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_shorthand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily translate long form unit names to shorthand — unit_shorthand","text":"chr/tbl class x","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_shorthand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily translate long form unit names to shorthand — unit_shorthand","text":"","code":"unit_shorthand(tibble::tibble(\"Max Gigawatt-hours\" = 5, \"Really big number\" = 10^6)) #> # A tibble: 1 × 2 #>   `Max GWh` `Really big number` #>       <dbl>               <dbl> #> 1         5             1000000"},{"path":"https://yogat3ch.github.io/UU/reference/unit_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the units from a string — unit_string","title":"Extract the units from a string — unit_string","text":"assumed units encased parentheses end string","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the units from a string — unit_string","text":"","code":"unit_string(x)  unit_string(x) <- value"},{"path":"https://yogat3ch.github.io/UU/reference/unit_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the units from a string — unit_string","text":"x chr String(s) extract units /assign units ","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unit_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the units from a string — unit_string","text":"chr","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/unit_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the units from a string — unit_string","text":"","code":"unit_string(\"Elevation (F)\") #> [1] \"F\""},{"path":"https://yogat3ch.github.io/UU/reference/unload_namespaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Unload namespaces prior to package install — unload_namespaces","title":"Unload namespaces prior to package install — unload_namespaces","text":"Unload namespaces prior package install","code":""},{"path":"https://yogat3ch.github.io/UU/reference/unload_namespaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unload namespaces prior to package install — unload_namespaces","text":"","code":"unload_namespaces(ns, verbose = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/unload_namespaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unload namespaces prior to package install — unload_namespaces","text":"ns (chr) namespaces unload verbose lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/use_UU_reimports.html","id":null,"dir":"Reference","previous_headings":"","what":"Write R/aaa_reimports.R file with all current infix operators — use_UU_reimports","title":"Write R/aaa_reimports.R file with all current infix operators — use_UU_reimports","text":"infix operators available: %allin%, %nin%, %|%, %|0|%, %|legit|%, %|try|%, %|zchar|%, %||%","code":""},{"path":"https://yogat3ch.github.io/UU/reference/use_UU_reimports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write R/aaa_reimports.R file with all current infix operators — use_UU_reimports","text":"","code":"use_UU_reimports(file = \"R/aaa_reimports.R\", overwrite = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/use_UU_reimports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write R/aaa_reimports.R file with all current infix operators — use_UU_reimports","text":"file chr path file write overwrite logical; existing destination files overwritten?","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/use_reimport.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a function to reimports — use_reimport","title":"Add a function to reimports — use_reimport","text":"Add function reimports","code":""},{"path":"https://yogat3ch.github.io/UU/reference/use_reimport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a function to reimports — use_reimport","text":"","code":"use_reimport(pkg, fun)"},{"path":"https://yogat3ch.github.io/UU/reference/use_reimport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a function to reimports — use_reimport","text":"pkg chr package name fun chr function name","code":""},{"path":"https://yogat3ch.github.io/UU/reference/use_reimport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a function to reimports — use_reimport","text":"msg","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/vlookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple lookup of values — vlookup","title":"Simple lookup of values — vlookup","text":"Simple lookup values","code":""},{"path":"https://yogat3ch.github.io/UU/reference/vlookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple lookup of values — vlookup","text":"","code":"vlookup(x, lookup, switch_names_values = FALSE)"},{"path":"https://yogat3ch.github.io/UU/reference/vlookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple lookup of values — vlookup","text":"x Values lookup lookup named names used replacement","code":""},{"path":[]},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/vlookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple lookup of values — vlookup","text":"","code":"lookup <- rlang::set_names(1:5, letters[1:5]) vlookup(sample(1:5, 5), lookup, switch_names_values = TRUE) #> [1] \"d\" \"e\" \"b\" \"c\" \"a\""},{"path":"https://yogat3ch.github.io/UU/reference/vlookup_from_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","title":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","text":"Vlookup replace using lookup column reference table","code":""},{"path":"https://yogat3ch.github.io/UU/reference/vlookup_from_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","text":"","code":"vlookup_from_ref(base, lookup_col, lookup_ref, value_col)"},{"path":"https://yogat3ch.github.io/UU/reference/vlookup_from_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","text":"base vector starting values. Replacements made vector returned. lookup_col vector values length base matched lookup_ref deteremine replacement indices lookup_ref vector reference values, lookup_col matched order determine replacement values. value_col vector replacement values length lookup_ref","code":""},{"path":"https://yogat3ch.github.io/UU/reference/vlookup_from_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","text":"vector","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/vlookup_from_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vlookup replace using a lookup column and reference table — vlookup_from_ref","text":"","code":"ref <- tibble::tibble(lookup = letters[1:5], value = 1:5) original <- tibble::tibble(lookup = letters[1:20], base = runif(20, min = 6, max = 20)) dplyr::mutate(original, base = vlookup_from_ref(base, lookup, ref$lookup, ref$value)) #> # A tibble: 20 × 2 #>    lookup  base #>    <chr>  <dbl> #>  1 a       1    #>  2 b       2    #>  3 c       3    #>  4 d       4    #>  5 e       5    #>  6 f       7.06 #>  7 g      10.9  #>  8 h      19.2  #>  9 i       6.58 #> 10 j      11.8  #> 11 k       8.68 #> 12 l      14.7  #> 13 m       7.43 #> 14 n      15.7  #> 15 o      11.9  #> 16 p      13.6  #> 17 q      14.6  #> 18 r       8.49 #> 19 s      18.7  #> 20 t      11.1"},{"path":"https://yogat3ch.github.io/UU/reference/week_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Day of the week as factor/numeric — week_factor","title":"Day of the week as factor/numeric — week_factor","text":"Day week factor/numeric","code":""},{"path":"https://yogat3ch.github.io/UU/reference/week_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Day of the week as factor/numeric — week_factor","text":"","code":"week_factor(   x,   label = FALSE,   abbr = TRUE,   week_start = getOption(\"lubridate.week.start\", 7) )"},{"path":"https://yogat3ch.github.io/UU/reference/week_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Day of the week as factor/numeric — week_factor","text":"x chr/Date/POSIXt Days week case insensitive character vector, using abbreviations, must consistent length. Otherwise, Date POSIXt","code":""},{"path":"https://yogat3ch.github.io/UU/reference/week_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Day of the week as factor/numeric — week_factor","text":"numeric/factor Depending value label. x provided, day week factor. x provided, ordered factor Monday 1.","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/week_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Day of the week as factor/numeric — week_factor","text":"","code":"week_factor() #>    Sunday    Monday   Tuesday Wednesday  Thursday    Friday  Saturday  #>       Sun       Mon       Tue       Wed       Thu       Fri       Sat  #> Levels: Sun < Mon < Tue < Wed < Thu < Fri < Sat week_factor(c('Tu', 'We')) #> [1] 3 4 week_factor(c('Tu', 'We'), label = TRUE) #> [1] Tuesday   Wednesday #> 7 Levels: Sunday < Monday < Tuesday < Wednesday < Thursday < ... < Saturday week_factor(seq(lubridate::floor_date(Sys.time(), \"year\"), Sys.time(), by = \"day\"), label = TRUE, abbr = FALSE) #>   [1] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>   [8] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [15] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [22] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [29] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [36] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [43] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [50] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [57] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [64] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [71] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [78] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [85] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [92] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #>  [99] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [106] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [113] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [120] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [127] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [134] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [141] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [148] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [155] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [162] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [169] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [176] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [183] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [190] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [197] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [204] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [211] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [218] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [225] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [232] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [239] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [246] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [253] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [260] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [267] Sunday    Monday    Tuesday   Wednesday Thursday  Friday    Saturday  #> [274] Sunday    Monday    #> 7 Levels: Sunday < Monday < Tuesday < Wednesday < Thursday < ... < Saturday"},{"path":"https://yogat3ch.github.io/UU/reference/write_dir_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Write dir helper function that are robust to dev vs deployed package states — write_dir_fn","title":"Write dir helper function that are robust to dev vs deployed package states — write_dir_fn","text":"Write dir helper function robust dev vs deployed package states","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_dir_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write dir helper function that are robust to dev vs deployed package states — write_dir_fn","text":"","code":"write_dir_fn(   outfile = \"R/utils_dir_fns.R\",   overwrite = TRUE,   for_golem = file.exists(\"R/app_ui.R\") )"},{"path":"https://yogat3ch.github.io/UU/reference/write_dir_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write dir helper function that are robust to dev vs deployed package states — write_dir_fn","text":"outfile chr path file write. Default R/utils_dir_fns.R overwrite lgl Whether overwrite existing file. Default TRUE for_golem lgl Whether use app_sys function package golem package","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_dir_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write dir helper function that are robust to dev vs deployed package states — write_dir_fn","text":"msg new file","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/write_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Write lines at a specific location in a file — write_lines","title":"Write lines at a specific location in a file — write_lines","text":"Write lines specific location file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write lines at a specific location in a file — write_lines","text":"","code":"write_lines(file, ..., after = \"end\")"},{"path":"https://yogat3ch.github.io/UU/reference/write_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write lines at a specific location in a file — write_lines","text":"file chr path file ... chr lines write num/chr either line number \"end\" write end","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write lines at a specific location in a file — write_lines","text":"resulting file","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/write_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all the option checking functions to a file — write_opts","title":"Write all the option checking functions to a file — write_opts","text":"Write option checking functions file","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all the option checking functions to a file — write_opts","text":"","code":"write_opts(file = \"R/utils_opts.R\")"},{"path":"https://yogat3ch.github.io/UU/reference/write_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all the option checking functions to a file — write_opts","text":"file chr Default R/opts.R","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write all the option checking functions to a file — write_opts","text":"msg","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/write_to_rprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write expressions to the .Rprofile — write_to_rprofile","title":"Write expressions to the .Rprofile — write_to_rprofile","text":"Write expressions .Rprofile","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_to_rprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write expressions to the .Rprofile — write_to_rprofile","text":"","code":"write_to_rprofile(..., scope = c(\"user\", \"project\")[1])"},{"path":"https://yogat3ch.github.io/UU/reference/write_to_rprofile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write expressions to the .Rprofile — write_to_rprofile","text":"... exprs scope chr .Rprofile write ","code":""},{"path":"https://yogat3ch.github.io/UU/reference/write_to_rprofile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write expressions to the .Rprofile — write_to_rprofile","text":"msg","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/xpath_sibling_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate xpath to find sibling nodes between two elements\nThe function produces a compounding xpath with each subsequent argument provided. Thus the final argument specified will be the node that is selected by the resulting xpath with the exception of nested_tag_contains which helps to identify a nested tag by its contents — xpath_sibling_between","title":"Generate xpath to find sibling nodes between two elements\nThe function produces a compounding xpath with each subsequent argument provided. Thus the final argument specified will be the node that is selected by the resulting xpath with the exception of nested_tag_contains which helps to identify a nested tag by its contents — xpath_sibling_between","text":"Generate xpath find sibling nodes two elements function produces compounding xpath subsequent argument provided. Thus final argument specified node selected resulting xpath exception nested_tag_contains helps identify nested tag contents","code":""},{"path":"https://yogat3ch.github.io/UU/reference/xpath_sibling_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate xpath to find sibling nodes between two elements\nThe function produces a compounding xpath with each subsequent argument provided. Thus the final argument specified will be the node that is selected by the resulting xpath with the exception of nested_tag_contains which helps to identify a nested tag by its contents — xpath_sibling_between","text":"","code":"xpath_sibling_between(   start_tag,   following_sibling,   preceding_sibling,   nested_tag,   nested_tag_contains )"},{"path":"https://yogat3ch.github.io/UU/reference/xpath_sibling_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate xpath to find sibling nodes between two elements\nThe function produces a compounding xpath with each subsequent argument provided. Thus the final argument specified will be the node that is selected by the resulting xpath with the exception of nested_tag_contains which helps to identify a nested tag by its contents — xpath_sibling_between","text":"start_tag chr xpath upper bounding element following_sibling chr relative xpath lower bounding element preceding_sibling chr relative xpath type elements upper lower bounding elements retrieve nested_tag chr relative xpath element nested within preceding_sibling elements nested_tag_contains chr text nested_tag element contains (order identify . nested tag element selected).","code":""},{"path":"https://yogat3ch.github.io/UU/reference/xpath_sibling_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate xpath to find sibling nodes between two elements\nThe function produces a compounding xpath with each subsequent argument provided. Thus the final argument specified will be the node that is selected by the resulting xpath with the exception of nested_tag_contains which helps to identify a nested tag by its contents — xpath_sibling_between","text":"chr xpath statement","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar.html","id":null,"dir":"Reference","previous_headings":"","what":"Is zero-length character? — zchar","title":"Is zero-length character? — zchar","text":"zero-length character?","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is zero-length character? — zchar","text":"","code":"zchar(...)"},{"path":"https://yogat3ch.github.io/UU/reference/zchar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is zero-length character? — zchar","text":"x chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is zero-length character? — zchar","text":"lgl","code":""},{"path":[]},{"path":"https://yogat3ch.github.io/UU/reference/zchar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is zero-length character? — zchar","text":"","code":"zchar(\"\") #> [1] TRUE zchar(\" \") #> [1] FALSE"},{"path":"https://yogat3ch.github.io/UU/reference/zchar_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove zero length strings (or string with all spaces) — zchar_remove","title":"Remove zero length strings (or string with all spaces) — zchar_remove","text":"Remove zero length strings (string spaces)","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove zero length strings (or string with all spaces) — zchar_remove","text":"","code":"zchar_remove(x)"},{"path":"https://yogat3ch.github.io/UU/reference/zchar_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove zero length strings (or string with all spaces) — zchar_remove","text":"x chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove zero length strings (or string with all spaces) — zchar_remove","text":"chr","code":""},{"path":"https://yogat3ch.github.io/UU/reference/zchar_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove zero length strings (or string with all spaces) — zchar_remove","text":"","code":"zchar_remove(c(\"\", \"  \", \"a\")) #> [1] \"a\""}]
