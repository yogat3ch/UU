% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/profiling_helpers.R
\name{profile_script}
\alias{profile_script}
\title{profile_script}
\usage{
profile_script(
  .file,
  profile_open = utils::Rprof(fs::path(dir_profvis, stringr::str_remove(basename(.file),
    "\\\\.[a-zA-Z0-9\\\\-]+$"), glue::glue("{.lo}-{.lc}"), ext = "Rprof"), interval =
    0.02, line.profiling = TRUE, memory.profiling = TRUE),
  profile_close = utils::Rprof(NULL),
  dir_profvis = "profvis",
  remove = FALSE,
  new_script = TRUE
)
}
\arguments{
\item{.file}{path to script}

\item{profile_open}{\code{(expression)} The code that will be added preceding the opening comment flag. Consider using \code{glue} such that internal variables can be used for file naming conventions. In addition the function arguments, the following variable names can be used:
\itemize{
\item{\code{.lo}}{ Short for line open, the line number of the opening profile code.}
\item{\code{.lc}}{ Short for line close, the line number of the closing profile code.}
}
\strong{Default: \code{utils::Rprof(fs::path(dir_profvis, basename(.x), glue::glue('{.lo}-{.lc}'), ext = "Rprof"), interval = .01, line.profiling = TRUE, gc.profiling = TRUE, memory.profiling = TRUE)}}. If \code{profile_script} were called on a script called \code{script.R} with opening flag at line 20 and closing flag at line 30, then line 20 would be changed as follows: \code{utils::Rprof("profvis/script.R/20-30.Rprof", interval = 0.01, line.profiling = TRUE, gc.profiling = TRUE, memory.profiling = TRUE) #<p}.}

\item{profile_close}{\code{(expression)} The code that will be added preceding the closing comment flag.  \strong{Default: \code{utils::Rprof(NULL)}}}

\item{dir_profvis}{\code{(character)} The directory in which all \code{profvis} related files will be put. \strong{Default: \code{"profvis"}}. Profile-ready script copies (if \code{new_scripts = TRUE}) and Rprof files/directories will be placed here. Set to \code{NULL} to use the working directory and overwrite existing files.}

\item{remove}{\code{(logical/character)} to indicate whether to remove profiling code. \strong{Default: FALSE}. Change to \code{TRUE} to remove profile code but leave flags. Change to \code{"f"/"flags"} to remove code and flags. Remove modifies \code{.file} in place.}

\item{new_script}{\code{(logical)} to indicate whether to write new profile-ready script copies to \code{dir_profvis}. \strong{Default: TRUE}, if \code{FALSE} the character vector output  of the profile-ready script lines from the function can be written to a file manually.}
}
\description{
This function will add profiling code to a script wherever the following flags are found in the first non-spacing characters on the line:
\itemize{
\item{\code{#<p}}{ Opening comment flag where \code{profile_open} will be inserted.}
\item{\code{#>p}}{ Closing comment flag where \code{profile_close} will be inserted.}
}
}
\concept{profiling}
