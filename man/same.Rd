% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_conditionals.R
\name{same}
\alias{same}
\title{Are the values in each object the same?}
\usage{
same(
  target = x,
  current = y,
  sort_by_names = TRUE,
  x = target,
  y = current,
  no_sort = FALSE,
  ...
)
}
\arguments{
\item{target}{\R object.}

\item{current}{other \R object, to be compared with \code{target}.}

\item{sort_by_names}{\code{lgl} Sort both target/current by their names (so the order is not taken into account when comparing). Sorting by names is non-recursive, only the top level of the list is sorted.}

\item{x}{\code{obj}}

\item{y}{\code{obj}}

\item{no_sort}{\code{lgl} Turn off the default behavior that sorts atomic vectors before comparing. This will compare \code{current} & \code{target} as is, equivalent to \code{isTRUE(all.equal(target,current, ...))}.}

\item{...}{
  Arguments passed on to \code{\link[base:all.equal]{base::all.equal}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
\code{lgl}
}
\description{
The primary difference from \code{\link[base]{identical}} & \code{\link[base]{all.equal}} is that objects are sorted by name so order doesn't matter. Set \code{sort_by_names = FALSE} to sort by values instead of names for atomic vectors: eg \code{c(1,2,3)} is equivalent to \code{c(3,2,1)}. Turn off sorting altogether with \code{no_sort}.
}
\examples{
same(list(x = 1, y = 2), list(y = 2, x = 1))
}
\seealso{
Other conditionals: 
\code{\link{is_error}()},
\code{\link{is_legit}()},
\code{\link{is_project}()},
\code{\link{larger}()},
\code{\link{most}()},
\code{\link{zchar}()}
}
\concept{conditionals}
