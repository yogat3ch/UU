% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_file_io.R
\name{write_dir_fn}
\alias{write_dir_fn}
\title{Write \code{dir} helper function that are robust to dev vs deployed package states}
\usage{
write_dir_fn(
  outfile = "R/utils_dir_fns.R",
  overwrite = TRUE,
  for_golem = file.exists("R/app_ui.R"),
  ...
)
}
\arguments{
\item{outfile}{\code{chr} path to file to write. Default \emph{R/utils_dir_fns.R}}

\item{overwrite}{\code{lgl} Whether to overwrite the existing file. Default \code{TRUE}}

\item{for_golem}{\code{lgl} Whether to use the \code{app_sys} function if package is a golem package}

\item{...}{\code{named directory path vectors} Other dir functions to write in the form of \code{dir_function_name = c('dir1', 'nesteddir2')} where \code{dir_function_name} is the name of the function under \code{dirs} and a vector of folder names. eg for a dirs function that accesses \code{data/plots}, the argument will be \code{plots = c('data', 'plots')}.}
}
\value{
\code{msg} and a new file
}
\description{
Write \code{dir} helper function that are robust to dev vs deployed package states
}
\seealso{
Other file IO: 
\code{\link{col_types}()},
\code{\link{dep_read}()},
\code{\link{dep_write}()},
\code{\link{dir_fn}()},
\code{\link{dirs}},
\code{\link{ext}()},
\code{\link{file_fn}()},
\code{\link{is_filepath}()},
\code{\link{last_updated}()},
\code{\link{list.files2}()},
\code{\link{load_obj}()},
\code{\link{make_names}()},
\code{\link{mkpath}()},
\code{\link{move_files_to_folder}()},
\code{\link{needs_update}()},
\code{\link{object_fn}()},
\code{\link{object_write}()},
\code{\link{package_size}()},
\code{\link{write_lines}()}
}
\concept{file IO}
