% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_environments_namespaces.R
\name{assign_in_ns}
\alias{assign_in_ns}
\title{Assign a variable into a namespace}
\usage{
assign_in_ns(
  x,
  nm = rlang::expr_deparse(rlang::enexpr(x)),
  ns_env = rlang::ns_env(pkg_name())
)
}
\arguments{
\item{x}{\code{object/chr} either the object itself or the name of the object to assign}

\item{nm}{\code{chr} name for object in the namespace. IF \code{x} is not supplied, this object will be retrieved by name from the calling environment via \code{\link[base]{get0}}}

\item{ns_env}{\code{env} of the namespace}
}
\value{
\code{x} the object
}
\description{
Unlocks and relocks namespaces and bindings as needed
}
\examples{
(function(x = mtcars) {
y <- dplyr::mutate(x, cylinders = cyl)
  assign_in_ns(nm = "y", ns_env = "UU")
})()
uu <- rlang::ns_env("UU")
exists("y", uu)
assign_in_ns(mtcars, ns_env = "UU")
exists("mtcars", uu)
assign_in_ns(mtcars, "cars_copy", ns_env = "UU")
exists("cars_copy", uu)
rlang::env_unlock(uu)
rm(list = c("y", "mtcars", "cars_copy"), envir = uu)
rlang::env_lock(uu)
}
\seealso{
Other namespaces: 
\code{\link{assign_global}()},
\code{\link{get_from_ns}()},
\code{\link{get_global}()},
\code{\link{pkg_ns}()},
\code{\link{unload_namespaces}()}
}
\concept{namespaces}
