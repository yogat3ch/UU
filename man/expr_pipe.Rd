% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/universal_useful.R
\name{expr_pipe}
\alias{expr_pipe}
\title{Return a list of expressions all piped together as a single expression}
\usage{
expr_pipe(exprs)
}
\arguments{
\item{exprs}{\code{expressions} See \code{\link[rlang]{exprs}}}
}
\value{
\code{expression}
}
\description{
Return a list of expressions all piped together as a single expression
}
\examples{
ex <- tibble::tibble(cat = rep(letters, length.out = 6, each = 2), val = #' runif(6, 0, 10))
exps <- rlang::exprs(
  data,
  dplyr::mutate(data, val = val  + 3)
)
make_exp <- function(data, addtl_exp, summarise = TRUE) {
  if (summarise) {
    addtl_exp <- append(
      addtl_exp,
      rlang::exprs(
        dplyr::group_by(cat),
        dplyr::summarise(val = sum(val))
      )
    )
  }
  rlang::eval_bare(expr_pipe(addtl_exp))
}
make_exp(ex, exps)
make_exp(ex, exps, FALSE)
}
