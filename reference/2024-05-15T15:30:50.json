{"trace_back":[{"call":"pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)","parent":0,"visible":true,"namespace":"pkgdown","scope":"::"},{"call":"build_site(pkg, preview = FALSE, install = install, new_process = new_process,\n  ...)","parent":1,"visible":true,"namespace":"pkgdown","scope":"::"},{"call":"build_site_local(pkg = pkg, examples = examples, run_dont_run = run_dont_run,\n  seed = seed, lazy = lazy, override = override, preview = preview, devel = devel)","parent":2,"visible":true,"namespace":"pkgdown","scope":":::"},{"call":"build_reference(pkg, lazy = lazy, examples = examples, run_dont_run = run_dont_run,\n  seed = seed, override = override, preview = FALSE, devel = devel)","parent":3,"visible":true,"namespace":"pkgdown","scope":"::"},{"call":"unwrap_purrr_error(purrr::map(topics, build_reference_topic, pkg = pkg, lazy = lazy,\n  examples_env = examples_env, run_dont_run = run_dont_run))","parent":4,"visible":true,"namespace":"pkgdown","scope":":::"},{"call":"withCallingHandlers(code, purrr_error_indexed = function(err) {\n  cnd_signal(err$parent)\n})","parent":5,"visible":true,"namespace":"base","scope":"::"},{"call":"purrr::map(topics, build_reference_topic, pkg = pkg, lazy = lazy, examples_env = examples_env,\n  run_dont_run = run_dont_run)","parent":4,"visible":true,"namespace":"purrr","scope":"::"},{"call":"map_(\"list\", .x, .f, ..., .progress = .progress)","parent":7,"visible":true,"namespace":"purrr","scope":":::"},{"call":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call,\n  call_with_cleanup(map_impl, environment(), .type, .progress, n, names, i))","parent":8,"visible":true,"namespace":"purrr","scope":":::"},{"call":"withCallingHandlers(expr, error = function(cnd) {\n  if (i == 0L) { } else {\n    message <- c(i = \"In index: {i}.\")\n    if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != \"\") {\n      name <- names[[i]]\n      message <- c(message, i = \"With name: {name}.\")\n    } else {\n      name <- NULL\n    }\n    cli::cli_abort(message, location = i, name = name, parent = cnd, call = error_call,\n      class = \"purrr_error_indexed\")\n  }\n  })","parent":9,"visible":true,"namespace":"base","scope":"::"},{"call":"call_with_cleanup(map_impl, environment(), .type, .progress, n, names, i)","parent":8,"visible":true,"namespace":"purrr","scope":":::"},{"call":".f(.x[[i]], ...)","parent":8,"visible":true,"namespace":"pkgdown","scope":"local"},{"call":"withCallingHandlers(data_reference_topic(topic, pkg, examples_env = examples_env,\n  run_dont_run = run_dont_run), error = function(err) {\n  cli::cli_abort(\"Failed to parse Rd in {.file {topic$file_in}}\", parent = err,\n    call = quote(build_reference()))\n})","parent":12,"visible":true,"namespace":"base","scope":"::"},{"call":"data_reference_topic(topic, pkg, examples_env = examples_env, run_dont_run = run_dont_run)","parent":12,"visible":true,"namespace":"pkgdown","scope":":::"},{"call":"run_examples(tags$tag_examples[[1]], env = if (is.null(examples_env)\n) NULL else new.env(parent = examples_env), topic = tools::file_path_sans_ext(\n  topic$file_in), run_dont_run = run_dont_run)","parent":14,"visible":true,"namespace":"pkgdown","scope":":::"},{"call":"highlight_examples(code, topic, env = env)","parent":15,"visible":true,"namespace":"pkgdown","scope":":::"},{"call":"downlit::evaluate_and_highlight(code, fig_save = fig_save_topic, env = child_env(\n  env), output_handler = evaluate::new_output_handler(value = pkgdown_print))","parent":16,"visible":true,"namespace":"downlit","scope":"::"},{"call":"evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler)","parent":17,"visible":true,"namespace":"evaluate","scope":"::"},{"call":"evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, debug = debug,\nlast = i == length(out), use_try = stop_on_error != 2L, keep_warning = keep_warning,\nkeep_message = keep_message, log_echo = log_echo, log_warning = log_warning,\noutput_handler = output_handler, include_timing = include_timing)","parent":18,"visible":true,"namespace":"evaluate","scope":":::"},{"call":"timing_fn(handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(\n  expr, envir, enclos, user_handlers)), warning = wHandler, error = eHandler,\nmessage = mHandler)))","parent":19,"visible":true,"namespace":"evaluate","scope":"local"},{"call":"handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(expr,\n  envir, enclos, user_handlers)), warning = wHandler, error = eHandler,\nmessage = mHandler))","parent":19,"visible":true,"namespace":"evaluate","scope":"local"},{"call":"try(f, silent = TRUE)","parent":21,"visible":true,"namespace":"base","scope":"::"},{"call":"tryCatch(expr, error = function(e) {\n  call <- conditionCall(e)\n  if (!is.null(call)) {\n    if (identical(call[[1L]], quote(doTryCatch))) call <- sys.call(-4L)\n    dcall <- deparse(call, nlines = 1L)\n    prefix <- paste(\"Error in\", dcall, \": \")\n    LONG <- 75L\n    sm <- strsplit(conditionMessage(e), \"\\n\")[[1L]]\n    w <- 14L + nchar(dcall, type = \"w\") + nchar(sm[1L], type = \"w\")\n    if (is.na(w)) w <- 14L + nchar(dcall, type = \"b\") + nchar(sm[1L], type = \"b\")\n    if (w > LONG) prefix <- paste0(prefix, \"\\n  \")\n  } else prefix <- \"Error : \"\n  msg <- paste0(prefix, conditionMessage(e), \"\\n\")\n  .Internal(seterrmessage(msg[1L]))\n  if (!silent && isTRUE(getOption(\"show.error.messages\"))) {\n    cat(msg, file = outFile)\n    .Internal(printDeferredWarnings())\n  }\n  invisible(structure(msg, class = \"try-error\", condition = e))\n})","parent":22,"visible":true,"namespace":"base","scope":"::"},{"call":"tryCatchList(expr, classes, parentenv, handlers)","parent":23,"visible":true,"namespace":"base","scope":"local"},{"call":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","parent":24,"visible":true,"namespace":"base","scope":"local"},{"call":"doTryCatch(return(expr), name, parentenv, handler)","parent":25,"visible":true,"namespace":"base","scope":"local"},{"call":"withCallingHandlers(withVisible(eval_with_user_handlers(expr, envir, enclos,\n  user_handlers)), warning = wHandler, error = eHandler, message = mHandler)","parent":19,"visible":true,"namespace":"base","scope":"::"},{"call":"withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers))","parent":19,"visible":true,"namespace":"base","scope":"::"},{"call":"eval_with_user_handlers(expr, envir, enclos, user_handlers)","parent":19,"visible":true,"namespace":"evaluate","scope":":::"},{"call":"eval(expr, envir, enclos)","parent":29,"visible":true,"namespace":"base","scope":"::"},{"call":"eval(expr, envir, enclos)","parent":30,"visible":true,"namespace":"base","scope":"::"},{"call":"trace_back_json()","parent":31,"visible":true,"namespace":"UU","scope":"::"}]}
